{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///medium-editor-insert.min.js","webpack:///webpack/bootstrap f44bb38e0c20e301dfef","webpack:///./src/js/Plugin.js","webpack:///./src/js/utils.js","webpack:///./src/js/Core.js","webpack:///./src/js/Toolbar.js","webpack:///./src/js/ToolbarButton.js","webpack:///./src/js/addons/Embeds.js","webpack:///./src/js/addons/Images.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_Core","_Core2","MediumEditorInsert","MediumEditor","Extension","extend","name","addons","images","embeds","_initializedAddons","init","prototype","apply","arguments","core","destroy","removeButtons","getCore","getAddons","getAddon","utils","ucfirst","str","charAt","toUpperCase","slice","generateRandomString","length","undefined","Math","random","toString","substr","getClosestWithClassName","el","className","util","traverseUp","element","classList","contains","isChildOf","parent","getElementsByClassName","parents","results","Array","forEach","editor","elements","push","getElementsByTagName","tagName","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","_utils","_utils2","_Images","_Images2","_Embeds","_Embeds2","Core","plugin","_plugin","_editor","base","initAddons","addButtons","events","_this","addonActions","on","document","toggleButtons","bind","buttons","toggleAddons","action","handleAddonClick","window","positionButtons","_this2","keys","addonOptions","console","error","html","createElement","getEditorId","add","setAttribute","addon","label","innerHTML","body","appendChild","remove","elPosition","addonButton","addonsStyle","addonButtonStyle","position","getSelectedParentElement","getBoundingClientRect","getComputedStyle","top","scrollY","left","scrollX","parseInt","marginLeft","style","shouldDisplayButtonsOnElement","selectElement","showButtons","deselectElement","hideButtons","addonClassNames","isAddon","belongsToEditor","innerText","trim","getEditorElements","addonName","elementClassName","selectedElement","toggle","e","currentTarget","getAttribute","preventDefault","handleClick","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","_ToolbarButton","_ToolbarButton2","MediumEditorToolbar","extensions","toolbar","Toolbar","_MediumEditorToolbar","options","getPrototypeOf","type","buttonOptions","button","assign","static","relativeContainer","createToolbarButtons","forEachExtension","extension","hasForm","getForm","attachEventHandlers","ul","li","btn","buttonName","buttonOpts","display","addBuiltInExtension","getButton","isElement","querySelectorAll","firstButtonClass","lastButtonClass","_this3","activeElements","preventSelectionUpdates","setTimeout","activeClassName","hideToolbar","showAndUpdateToolbar","container","anchorPreview","showToolbar","positionStaticToolbar","getExtensionByName","hidePreview","ToolbarButton","log","Embeds","_Toolbar","_Toolbar2","Images","preview","uploadUrl","deleteUrl","deleteMethod","deleteData","initToolbar","unselectImage","removeImage","selectImage","_input","multiple","uploadFiles","click","paragraph","nodeName","toLowerCase","div","parentNode","insertBefore","files","file","uid","upload","reader","FileReader","onload","insertImage","result","readAsDataURL","_this4","xhr","XMLHttpRequest","data","FormData","open","onreadystatechange","readyState","status","image","querySelector","replaceImage","responseText","append","send","url","figure","img","domImage","alt","match","src","Image","removeAttribute","_this5","clickedImage","_this6","keyCode","BACKSPACE","DELETE","indexOf","which","selection","getSelection","selectedHtml","rangeCount","range","getSelectionRange","focusedElement","caretPosition","getCaretOffsets","sibling","previousElementSibling","nextElementSibling","newImages","getSelectionHtml","temp","wrappers","wrapper","deleteFile","childElementCount","next","prev","moveCursor","lastChild","textContent"],"mappings":"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","file":"medium-editor-insert.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MediumEditorInsert\"] = factory();\n\telse\n\t\troot[\"MediumEditorInsert\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MediumEditorInsert\"] = factory();\n\telse\n\t\troot[\"MediumEditorInsert\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _Core = __webpack_require__(2);\n\t\n\tvar _Core2 = _interopRequireDefault(_Core);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar MediumEditorInsert = MediumEditor.Extension.extend({\n\t    name: 'insert',\n\t\n\t    addons: {\n\t        images: true,\n\t        embeds: true\n\t    },\n\t\n\t    _initializedAddons: {},\n\t\n\t    init: function init() {\n\t        MediumEditor.Extension.prototype.init.apply(this, arguments);\n\t\n\t        this.core = new _Core2.default(this);\n\t    },\n\t\n\t    destroy: function destroy() {\n\t        this.core.removeButtons();\n\t    },\n\t\n\t    getCore: function getCore() {\n\t        return this.core;\n\t    },\n\t\n\t    getAddons: function getAddons() {\n\t        return this._initializedAddons;\n\t    },\n\t\n\t    getAddon: function getAddon(name) {\n\t        return this._initializedAddons[name];\n\t    }\n\t});\n\t\n\texports.default = MediumEditorInsert;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\tvar utils = {\n\t    ucfirst: function ucfirst(str) {\n\t        return str.charAt(0).toUpperCase() + str.slice(1);\n\t    },\n\t\n\t    generateRandomString: function generateRandomString() {\n\t        var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 15;\n\t\n\t        return Math.random().toString(36).substr(2, length);\n\t    },\n\t\n\t    getClosestWithClassName: function getClosestWithClassName(el, className) {\n\t        return MediumEditor.util.traverseUp(el, function (element) {\n\t            return element.classList.contains(className);\n\t        });\n\t    },\n\t\n\t    isChildOf: function isChildOf(el, parent) {\n\t        return MediumEditor.util.traverseUp(el, function (element) {\n\t            return element === parent;\n\t        }) ? true : false;\n\t    },\n\t\n\t    getElementsByClassName: function getElementsByClassName(parents, className) {\n\t        var results = [];\n\t\n\t        Array.prototype.forEach.call(parents, function (editor) {\n\t            var elements = editor.getElementsByClassName(className);\n\t\n\t            Array.prototype.forEach.call(elements, function (element) {\n\t                results.push(element);\n\t            });\n\t        });\n\t\n\t        return results;\n\t    },\n\t\n\t    getElementsByTagName: function getElementsByTagName(parents, tagName) {\n\t        var results = [];\n\t\n\t        Array.prototype.forEach.call(parents, function (editor) {\n\t            var elements = editor.getElementsByTagName(tagName);\n\t\n\t            Array.prototype.forEach.call(elements, function (element) {\n\t                results.push(element);\n\t            });\n\t        });\n\t\n\t        return results;\n\t    }\n\t};\n\t\n\texports.default = utils;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _utils = __webpack_require__(1);\n\t\n\tvar _utils2 = _interopRequireDefault(_utils);\n\t\n\tvar _Images = __webpack_require__(6);\n\t\n\tvar _Images2 = _interopRequireDefault(_Images);\n\t\n\tvar _Embeds = __webpack_require__(5);\n\t\n\tvar _Embeds2 = _interopRequireDefault(_Embeds);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Core = function () {\n\t    function Core(plugin) {\n\t        _classCallCheck(this, Core);\n\t\n\t        this._plugin = plugin;\n\t        this._editor = this._plugin.base;\n\t\n\t        this.initAddons();\n\t        this.addButtons();\n\t        this.events();\n\t    }\n\t\n\t    _createClass(Core, [{\n\t        key: 'events',\n\t        value: function events() {\n\t            var _this = this;\n\t\n\t            var addonActions = void 0;\n\t\n\t            // This could be chained when medium-editor 5.15.2 is released\n\t            // https://github.com/yabwe/medium-editor/pull/1046\n\t            this._plugin.on(document, 'click', this.toggleButtons.bind(this));\n\t            this._plugin.on(document, 'keyup', this.toggleButtons.bind(this));\n\t            this._plugin.on(this.buttons.getElementsByClassName('medium-editor-insert-buttons-show')[0], 'click', this.toggleAddons.bind(this));\n\t\n\t            // This could be written in one statement when medium-editor 5.15.2 is released\n\t            // https://github.com/yabwe/medium-editor/pull/1046\n\t            addonActions = this.buttons.getElementsByClassName('medium-editor-insert-action');\n\t            Array.prototype.forEach.call(addonActions, function (action) {\n\t                _this._plugin.on(action, 'click', _this.handleAddonClick.bind(_this));\n\t            });\n\t\n\t            this._plugin.on(window, 'resize', this.positionButtons.bind(this));\n\t        }\n\t    }, {\n\t        key: 'initAddons',\n\t        value: function initAddons() {\n\t            var _this2 = this;\n\t\n\t            // Initialize all default addons, we'll delete ones we don't need later\n\t            this._plugin._initializedAddons = {\n\t                images: new _Images2.default(this._plugin, this._plugin.addons.images),\n\t                embeds: new _Embeds2.default(this._plugin, this._plugin.addons.embeds)\n\t            };\n\t\n\t            Object.keys(this._plugin.addons).forEach(function (name) {\n\t                var addonOptions = _this2._plugin.addons[name];\n\t\n\t                // If the addon is custom one\n\t                if (!_this2._plugin._initializedAddons[name]) {\n\t                    if (typeof addonOptions === 'function') {\n\t                        _this2._plugin._initializedAddons[name] = new addonOptions(_this2._plugin);\n\t                    } else {\n\t                        window.console.error('I don\\'t know how to initialize custom \"' + name + '\" addon!');\n\t                    }\n\t                }\n\t\n\t                // Delete disabled addon\n\t                if (!addonOptions) {\n\t                    delete _this2._plugin._initializedAddons[name];\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'addButtons',\n\t        value: function addButtons() {\n\t            var addons = this._plugin.getAddons();\n\t            var html = void 0;\n\t\n\t            this.buttons = document.createElement('div');\n\t            this.buttons.id = 'medium-editor-insert-' + this._plugin.getEditorId();\n\t            this.buttons.classList.add('medium-editor-insert-buttons');\n\t            this.buttons.setAttribute('contentediable', false);\n\t\n\t            html = '<a class=\"medium-editor-insert-buttons-show\">+</a>\\n            <ul class=\"medium-editor-insert-buttons-addons\">';\n\t\n\t            Object.keys(addons).forEach(function (name) {\n\t                var addon = addons[name];\n\t\n\t                html += '<li><a class=\"medium-editor-insert-action\" data-addon=\"' + name + '\">' + addon.label + '</a></li>';\n\t            });\n\t\n\t            html += '</ul>';\n\t\n\t            this.buttons.innerHTML = html;\n\t\n\t            document.body.appendChild(this.buttons);\n\t        }\n\t    }, {\n\t        key: 'removeButtons',\n\t        value: function removeButtons() {\n\t            this.buttons.remove();\n\t        }\n\t    }, {\n\t        key: 'positionButtons',\n\t        value: function positionButtons() {\n\t            var el = void 0,\n\t                elPosition = void 0,\n\t                addons = void 0,\n\t                addonButton = void 0,\n\t                addonsStyle = void 0,\n\t                addonButtonStyle = void 0,\n\t                position = void 0;\n\t\n\t            // Don't position buttons if they aren't active\n\t            if (this.buttons.classList.contains('medium-editor-insert-buttons-active') === false) {\n\t                return;\n\t            }\n\t\n\t            el = this._editor.getSelectedParentElement();\n\t            elPosition = el.getBoundingClientRect();\n\t            addons = this.buttons.getElementsByClassName('medium-editor-insert-buttons-addons')[0];\n\t            addonButton = this.buttons.getElementsByClassName('medium-editor-insert-action')[0];\n\t            addonsStyle = window.getComputedStyle(addons);\n\t            addonButtonStyle = window.getComputedStyle(addonButton);\n\t\n\t            // Calculate position\n\t            position = {\n\t                top: window.scrollY + elPosition.top,\n\t                left: window.scrollX + elPosition.left - parseInt(addonsStyle.left, 10) - parseInt(addonButtonStyle.marginLeft, 10)\n\t            };\n\t\n\t            // If left position is lower than 0, the buttons would be out of the viewport.\n\t            // In that case, align buttons with the editor\n\t            position.left = position.left < 0 ? elPosition.left : position.left;\n\t\n\t            this.buttons.style.left = position.left + 'px';\n\t            this.buttons.style.top = position.top + 'px';\n\t        }\n\t    }, {\n\t        key: 'toggleButtons',\n\t        value: function toggleButtons() {\n\t            var el = this._editor.getSelectedParentElement();\n\t\n\t            if (this.shouldDisplayButtonsOnElement(el)) {\n\t                this.selectElement(el);\n\t                this.showButtons();\n\t            } else {\n\t                this.deselectElement();\n\t                this.hideButtons();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'shouldDisplayButtonsOnElement',\n\t        value: function shouldDisplayButtonsOnElement(el) {\n\t            var addons = this._plugin.getAddons(),\n\t                addonClassNames = [];\n\t            var isAddon = false,\n\t                belongsToEditor = false;\n\t\n\t            // Don't show buttons when the element has text\n\t            if (el.innerText.trim() !== '') {\n\t                return false;\n\t            }\n\t\n\t            // Don't show buttons when the editor doesn't belong to editor\n\t            this._plugin.getEditorElements().forEach(function (editor) {\n\t                if (_utils2.default.isChildOf(el, editor)) {\n\t                    belongsToEditor = true;\n\t                    return;\n\t                }\n\t            });\n\t\n\t            if (!belongsToEditor) {\n\t                return false;\n\t            }\n\t\n\t            // Get class names used by addons\n\t            Object.keys(addons).forEach(function (addonName) {\n\t                var addon = addons[addonName];\n\t                if (addon.elementClassName) {\n\t                    addonClassNames.push(addon.elementClassName);\n\t                }\n\t            });\n\t\n\t            // Don't show buttons if the element is an addon element\n\t            // - when the element has an addon class, or some of its parents have it\n\t            addonClassNames.forEach(function (className) {\n\t                if (el.classList.contains(className) || _utils2.default.getClosestWithClassName(el, className)) {\n\t                    isAddon = true;\n\t                    return;\n\t                }\n\t            });\n\t\n\t            return !isAddon;\n\t        }\n\t    }, {\n\t        key: 'selectElement',\n\t        value: function selectElement(el) {\n\t            this.selectedElement = el;\n\t        }\n\t    }, {\n\t        key: 'deselectElement',\n\t        value: function deselectElement() {\n\t            this.selectedElement = null;\n\t        }\n\t    }, {\n\t        key: 'showButtons',\n\t        value: function showButtons() {\n\t            this.buttons.classList.add('medium-editor-insert-buttons-active');\n\t            this.positionButtons();\n\t        }\n\t    }, {\n\t        key: 'hideButtons',\n\t        value: function hideButtons() {\n\t            this.buttons.classList.remove('medium-editor-insert-buttons-active');\n\t            this.buttons.classList.remove('medium-editor-insert-addons-active');\n\t        }\n\t    }, {\n\t        key: 'toggleAddons',\n\t        value: function toggleAddons() {\n\t            this.buttons.classList.toggle('medium-editor-insert-addons-active');\n\t        }\n\t    }, {\n\t        key: 'handleAddonClick',\n\t        value: function handleAddonClick(e) {\n\t            var name = e.currentTarget.getAttribute('data-addon');\n\t\n\t            e.preventDefault();\n\t\n\t            this._plugin.getAddon(name).handleClick(e);\n\t        }\n\t    }]);\n\t\n\t    return Core;\n\t}();\n\t\n\texports.default = Core;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _utils = __webpack_require__(1);\n\t\n\tvar _utils2 = _interopRequireDefault(_utils);\n\t\n\tvar _ToolbarButton = __webpack_require__(4);\n\t\n\tvar _ToolbarButton2 = _interopRequireDefault(_ToolbarButton);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar MediumEditorToolbar = MediumEditor.extensions.toolbar;\n\t\n\tvar Toolbar = function (_MediumEditorToolbar) {\n\t    _inherits(Toolbar, _MediumEditorToolbar);\n\t\n\t    function Toolbar(options) {\n\t        _classCallCheck(this, Toolbar);\n\t\n\t        var _this = _possibleConstructorReturn(this, (Toolbar.__proto__ || Object.getPrototypeOf(Toolbar)).call(this, options));\n\t\n\t        _this.name = options.type + 'Toolbar';\n\t\n\t        options.buttons.forEach(function (buttonOptions) {\n\t            var button = new _ToolbarButton2.default(Object.assign({}, {\n\t                window: _this.plugin.window,\n\t                document: _this.plugin.document,\n\t                base: _this.plugin.base\n\t            }, buttonOptions));\n\t\n\t            button.init();\n\t            _this.plugin.base.extensions.push(button);\n\t        });\n\t\n\t        _this.window = options.plugin.window;\n\t        _this.document = options.plugin.document;\n\t        _this.base = options.plugin.base;\n\t\n\t        _this.init();\n\t        return _this;\n\t    }\n\t\n\t    _createClass(Toolbar, [{\n\t        key: 'createToolbar',\n\t        value: function createToolbar() {\n\t            var toolbar = this.document.createElement('div');\n\t\n\t            toolbar.id = 'medium-editor-insert-' + this.type + '-toolbar-' + this.getEditorId();\n\t            toolbar.className = 'medium-editor-toolbar';\n\t\n\t            if (this.static) {\n\t                toolbar.className += ' static-toolbar';\n\t            } else if (this.relativeContainer) {\n\t                toolbar.className += ' medium-editor-relative-toolbar';\n\t            } else {\n\t                toolbar.className += ' medium-editor-stalker-toolbar';\n\t            }\n\t\n\t            toolbar.appendChild(this.createToolbarButtons());\n\t\n\t            // Add any forms that extensions may have\n\t            this.forEachExtension(function (extension) {\n\t                if (extension.hasForm) {\n\t                    toolbar.appendChild(extension.getForm());\n\t                }\n\t            });\n\t\n\t            this.attachEventHandlers();\n\t\n\t            return toolbar;\n\t        }\n\t    }, {\n\t        key: 'createToolbarButtons',\n\t        value: function createToolbarButtons() {\n\t            var _this2 = this;\n\t\n\t            var ul = this.document.createElement('ul');\n\t            var li = void 0,\n\t                btn = void 0,\n\t                buttons = void 0,\n\t                extension = void 0,\n\t                buttonName = void 0,\n\t                buttonOpts = void 0;\n\t\n\t            ul.id = 'medium-editor-insert-' + this.type + '-toolbar-actions' + this.getEditorId();\n\t            ul.className = 'medium-editor-toolbar-actions';\n\t            ul.style.display = 'block';\n\t\n\t            this.buttons.forEach(function (button) {\n\t                if (typeof button === 'string') {\n\t                    buttonName = button;\n\t                    buttonOpts = null;\n\t                } else {\n\t                    buttonName = button.name;\n\t                    buttonOpts = button;\n\t                }\n\t\n\t                // If the button already exists as an extension, it'll be returned\n\t                // othwerise it'll create the default built-in button\n\t                extension = _this2.base.addBuiltInExtension(buttonName, buttonOpts);\n\t\n\t                if (extension && typeof extension.getButton === 'function') {\n\t                    btn = extension.getButton(_this2.base);\n\t                    li = _this2.document.createElement('li');\n\t                    if (MediumEditor.util.isElement(btn)) {\n\t                        li.appendChild(btn);\n\t                    } else {\n\t                        li.innerHTML = btn;\n\t                    }\n\t                    ul.appendChild(li);\n\t                }\n\t            }, this);\n\t\n\t            buttons = ul.querySelectorAll('button');\n\t            if (buttons.length > 0) {\n\t                buttons[0].classList.add(this.firstButtonClass);\n\t                buttons[buttons.length - 1].classList.add(this.lastButtonClass);\n\t            }\n\t\n\t            return ul;\n\t        }\n\t    }, {\n\t        key: 'checkState',\n\t        value: function checkState() {\n\t            var _this3 = this;\n\t\n\t            var activeElements = void 0;\n\t\n\t            if (this.base.preventSelectionUpdates) {\n\t                return;\n\t            }\n\t\n\t            // Wait for elements to be selected\n\t            setTimeout(function () {\n\t                activeElements = _utils2.default.getElementsByClassName(_this3.getEditorElements(), _this3.activeClassName);\n\t\n\t                // Hide toolbar when no elements are selected\n\t                if (activeElements.length === 0) {\n\t                    return _this3.hideToolbar();\n\t                }\n\t\n\t                // Now we know there's a focused editable with a selection\n\t                _this3.showAndUpdateToolbar();\n\t            }, 10);\n\t        }\n\t    }, {\n\t        key: 'setToolbarPosition',\n\t        value: function setToolbarPosition() {\n\t            var container = _utils2.default.getElementsByClassName(this.getEditorElements(), this.activeClassName)[0];\n\t            var anchorPreview = void 0;\n\t\n\t            // If there isn't a valid selection, bail\n\t            if (!container) {\n\t                return this;\n\t            }\n\t\n\t            this.showToolbar();\n\t            this.positionStaticToolbar(container);\n\t\n\t            anchorPreview = this.base.getExtensionByName('anchor-preview');\n\t\n\t            if (anchorPreview && typeof anchorPreview.hidePreview === 'function') {\n\t                anchorPreview.hidePreview();\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return Toolbar;\n\t}(MediumEditorToolbar);\n\t\n\texports.default = Toolbar;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\tvar ToolbarButton = MediumEditor.extensions.button.extend({\n\t    init: function init() {\n\t        this.button = this.document.createElement('button');\n\t        this.button.classList.add('medium-editor-action');\n\t        this.button.innerHTML = '<b>' + this.label + '</b>';\n\t\n\t        this.on(this.button, 'click', this.handleClick.bind(this));\n\t    },\n\t\n\t    getButton: function getButton() {\n\t        return this.button;\n\t    },\n\t\n\t    handleClick: function handleClick() {\n\t        console.log(this.name + ' clicked!');\n\t    }\n\t});\n\t\n\texports.default = ToolbarButton;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Embeds = function () {\n\t\tfunction Embeds(plugin, options) {\n\t\t\t_classCallCheck(this, Embeds);\n\t\n\t\t\tthis._plugin = plugin;\n\t\t\tthis._editor = this._plugin.base;\n\t\n\t\t\tthis.options = {\n\t\t\t\tlabel: '<span class=\"fa fa-youtube-play\"></span>'\n\t\t\t};\n\t\n\t\t\tObject.assign(this.options, options);\n\t\n\t\t\tthis.label = this.options.label;\n\t\t}\n\t\n\t\t_createClass(Embeds, [{\n\t\t\tkey: 'handleClick',\n\t\t\tvalue: function handleClick() {\n\t\t\t\twindow.console.log('embeds clicked');\n\t\t\t}\n\t\t}]);\n\t\n\t\treturn Embeds;\n\t}();\n\t\n\texports.default = Embeds;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _utils = __webpack_require__(1);\n\t\n\tvar _utils2 = _interopRequireDefault(_utils);\n\t\n\tvar _Toolbar = __webpack_require__(3);\n\t\n\tvar _Toolbar2 = _interopRequireDefault(_Toolbar);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Images = function () {\n\t    function Images(plugin, options) {\n\t        _classCallCheck(this, Images);\n\t\n\t        this.options = {\n\t            label: '<span class=\"fa fa-camera\"></span>',\n\t            preview: true,\n\t            uploadUrl: 'upload.php',\n\t            deleteUrl: 'delete.php',\n\t            deleteMethod: 'DELETE',\n\t            deleteData: {}\n\t        };\n\t\n\t        Object.assign(this.options, options);\n\t\n\t        this._plugin = plugin;\n\t        this._editor = this._plugin.base;\n\t        this.elementClassName = 'medium-editor-insert-images';\n\t        this.activeClassName = 'medium-editor-insert-image-active';\n\t        this.label = this.options.label;\n\t\n\t        this.initToolbar();\n\t        this.events();\n\t    }\n\t\n\t    _createClass(Images, [{\n\t        key: 'events',\n\t        value: function events() {\n\t            var _this = this;\n\t\n\t            this._plugin.on(document, 'click', this.unselectImage.bind(this));\n\t            this._plugin.on(document, 'keydown', this.removeImage.bind(this));\n\t\n\t            this._plugin.getEditorElements().forEach(function (editor) {\n\t                _this._plugin.on(editor, 'click', _this.selectImage.bind(_this));\n\t            });\n\t        }\n\t    }, {\n\t        key: 'handleClick',\n\t        value: function handleClick() {\n\t            this._input = document.createElement('input');\n\t            this._input.type = 'file';\n\t            this._input.multiple = true;\n\t\n\t            this._plugin.on(this._input, 'change', this.uploadFiles.bind(this));\n\t\n\t            this._input.click();\n\t        }\n\t    }, {\n\t        key: 'initToolbar',\n\t        value: function initToolbar() {\n\t            this.toolbar = new _Toolbar2.default({\n\t                plugin: this._plugin,\n\t                type: 'images',\n\t                activeClassName: this.activeClassName,\n\t                buttons: [{\n\t                    name: 'align-left',\n\t                    action: 'left',\n\t                    label: 'Left'\n\t                }, {\n\t                    name: 'align-center',\n\t                    action: 'center',\n\t                    label: 'Center'\n\t                }, {\n\t                    name: 'align-right',\n\t                    action: 'right',\n\t                    label: 'Right'\n\t                }]\n\t            });\n\t\n\t            this._editor.extensions.push(this.toolbar);\n\t        }\n\t    }, {\n\t        key: 'uploadFiles',\n\t        value: function uploadFiles() {\n\t            var _this2 = this;\n\t\n\t            var paragraph = this._plugin.getCore().selectedElement;\n\t\n\t            // Replace paragraph with div, because figure is a block element\n\t            // and can't be nested inside paragraphs\n\t            if (paragraph.nodeName.toLowerCase() === 'p') {\n\t                var div = document.createElement('div');\n\t\n\t                paragraph.parentNode.insertBefore(div, paragraph);\n\t                this._plugin.getCore().selectElement(div);\n\t                paragraph.remove();\n\t            }\n\t\n\t            Array.prototype.forEach.call(this._input.files, function (file) {\n\t                // Generate uid for this image, so we can identify it later\n\t                // and we can replace preview image with uploaded one\n\t                var uid = _utils2.default.generateRandomString();\n\t\n\t                if (_this2.options.preview) {\n\t                    _this2.preview(file, uid);\n\t                }\n\t\n\t                _this2.upload(file, uid);\n\t            });\n\t\n\t            this._plugin.getCore().hideButtons();\n\t        }\n\t    }, {\n\t        key: 'preview',\n\t        value: function preview(file, uid) {\n\t            var _this3 = this;\n\t\n\t            var reader = new FileReader();\n\t\n\t            reader.onload = function (e) {\n\t                _this3.insertImage(e.target.result, uid);\n\t            };\n\t\n\t            reader.readAsDataURL(file);\n\t        }\n\t    }, {\n\t        key: 'upload',\n\t        value: function upload(file, uid) {\n\t            var _this4 = this;\n\t\n\t            var xhr = new XMLHttpRequest(),\n\t                data = new FormData();\n\t\n\t            xhr.open(\"POST\", this.options.uploadUrl, true);\n\t            xhr.onreadystatechange = function () {\n\t                if (xhr.readyState === 4 && xhr.status === 200) {\n\t                    var image = _this4._plugin.getCore().selectedElement.querySelector('[data-uid=\"' + uid + '\"]');\n\t\n\t                    if (image) {\n\t                        _this4.replaceImage(image, xhr.responseText);\n\t                    } else {\n\t                        _this4.insertImage(xhr.responseText);\n\t                    }\n\t                }\n\t            };\n\t\n\t            data.append(\"file\", file);\n\t            xhr.send(data);\n\t        }\n\t    }, {\n\t        key: 'insertImage',\n\t        value: function insertImage(url, uid) {\n\t            var el = this._plugin.getCore().selectedElement,\n\t                figure = document.createElement('figure'),\n\t                img = document.createElement('img');\n\t            var domImage = void 0;\n\t\n\t            img.alt = '';\n\t\n\t            if (uid) {\n\t                img.setAttribute('data-uid', uid);\n\t            }\n\t\n\t            // If we're dealing with a preview image,\n\t            // we don't have to preload it before displaying\n\t            if (url.match(/^data:/)) {\n\t                img.src = url;\n\t                figure.appendChild(img);\n\t                el.appendChild(figure);\n\t            } else {\n\t                domImage = new Image();\n\t                domImage.onload = function () {\n\t                    img.src = domImage.src;\n\t                    figure.appendChild(img);\n\t                    el.appendChild(figure);\n\t                };\n\t                domImage.src = url;\n\t            }\n\t\n\t            el.classList.add(this.elementClassName);\n\t\n\t            // Return domImage so we can test this function easily\n\t            return domImage;\n\t        }\n\t    }, {\n\t        key: 'replaceImage',\n\t        value: function replaceImage(image, url) {\n\t            var domImage = new Image();\n\t\n\t            domImage.onload = function () {\n\t                image.src = domImage.src;\n\t                image.removeAttribute('data-uid');\n\t            };\n\t\n\t            domImage.src = url;\n\t\n\t            // Return domImage so we can test this function easily\n\t            return domImage;\n\t        }\n\t    }, {\n\t        key: 'selectImage',\n\t        value: function selectImage(e) {\n\t            var el = e.target;\n\t\n\t            if (el.nodeName.toLowerCase() === 'img' && _utils2.default.getClosestWithClassName(el, this.elementClassName)) {\n\t                el.classList.add(this.activeClassName);\n\t\n\t                this._editor.selectElement(el);\n\t            }\n\t        }\n\t    }, {\n\t        key: 'unselectImage',\n\t        value: function unselectImage(e) {\n\t            var _this5 = this;\n\t\n\t            var el = e.target;\n\t            var clickedImage = void 0,\n\t                images = void 0;\n\t\n\t            // Unselect all selected images. If an image is clicked, unselect all except this one.\n\t            if (el.nodeName.toLowerCase() === 'img' && el.classList.contains(this.activeClassName)) {\n\t                clickedImage = el;\n\t            }\n\t\n\t            images = _utils2.default.getElementsByClassName(this._plugin.getEditorElements(), this.activeClassName);\n\t            Array.prototype.forEach.call(images, function (image) {\n\t                if (image !== clickedImage) {\n\t                    image.classList.remove(_this5.activeClassName);\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'removeImage',\n\t        value: function removeImage(e) {\n\t            var _this6 = this;\n\t\n\t            if ([MediumEditor.util.keyCode.BACKSPACE, MediumEditor.util.keyCode.DELETE].indexOf(e.which) > -1) {\n\t                var images = _utils2.default.getElementsByClassName(this._plugin.getEditorElements(), this.activeClassName),\n\t                    selection = window.getSelection();\n\t                var selectedHtml = void 0;\n\t\n\t                // Remove image even if it's not selected, but backspace/del is pressed in text\n\t                if (selection && selection.rangeCount) {\n\t                    var range = MediumEditor.selection.getSelectionRange(document),\n\t                        focusedElement = MediumEditor.selection.getSelectedParentElement(range),\n\t                        caretPosition = MediumEditor.selection.getCaretOffsets(focusedElement).left;\n\t                    var sibling = void 0;\n\t\n\t                    // Is backspace pressed and caret is at the beginning of a paragraph, get previous element\n\t                    if (e.which === MediumEditor.util.keyCode.BACKSPACE && caretPosition === 0) {\n\t                        sibling = focusedElement.previousElementSibling;\n\t                        // Is del pressed and caret is at the end of a paragraph, get next element\n\t                    } else if (e.which === MediumEditor.util.keyCode.DELETE && caretPosition === focusedElement.innerText.length) {\n\t                        sibling = focusedElement.nextElementSibling;\n\t                    }\n\t\n\t                    if (sibling && sibling.classList.contains('medium-editor-insert-images')) {\n\t                        var newImages = sibling.getElementsByTagName('img');\n\t                        Array.prototype.forEach.call(newImages, function (image) {\n\t                            images.push(image);\n\t                        });\n\t                    }\n\t\n\t                    // If text is selected, find images in the selection\n\t                    selectedHtml = MediumEditor.selection.getSelectionHtml(document);\n\t                    if (selectedHtml) {\n\t                        var temp = document.createElement('div');\n\t                        var wrappers = void 0,\n\t                            _newImages = void 0;\n\t                        temp.innerHTML = selectedHtml;\n\t\n\t                        wrappers = temp.getElementsByClassName('medium-editor-insert-images');\n\t                        _newImages = _utils2.default.getElementsByTagName(wrappers, 'img');\n\t\n\t                        Array.prototype.forEach.call(_newImages, function (image) {\n\t                            images.push(image);\n\t                        });\n\t                    }\n\t                }\n\t\n\t                if (images.length) {\n\t                    if (!selectedHtml) {\n\t                        e.preventDefault();\n\t                    }\n\t\n\t                    images.forEach(function (image) {\n\t                        var wrapper = _utils2.default.getClosestWithClassName(image, 'medium-editor-insert-images');\n\t                        _this6.deleteFile(image.src);\n\t\n\t                        image.parentNode.remove();\n\t\n\t                        // If wrapper has no images anymore, remove it\n\t                        if (wrapper.childElementCount === 0) {\n\t                            var next = wrapper.nextElementSibling,\n\t                                prev = wrapper.previousElementSibling;\n\t\n\t                            wrapper.remove();\n\t\n\t                            // If there is no selection, move cursor at the beginning of next paragraph (if delete is pressed),\n\t                            // or nove it at the end of previous paragraph (if backspace is pressed)\n\t                            if (!selectedHtml) {\n\t                                if (next || prev) {\n\t                                    if (next && e.which === MediumEditor.util.keyCode.DELETE || !prev) {\n\t                                        MediumEditor.selection.moveCursor(document, next, 0);\n\t                                    } else {\n\t                                        MediumEditor.selection.moveCursor(document, prev.lastChild, prev.lastChild.textContent.length);\n\t                                    }\n\t                                }\n\t                            }\n\t                        }\n\t                    });\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'deleteFile',\n\t        value: function deleteFile(image) {\n\t            if (this.options.deleteUrl) {\n\t                var xhr = new XMLHttpRequest(),\n\t                    data = Object.assign({}, {\n\t                    file: image\n\t                }, this.options.deleteData);\n\t\n\t                xhr.open(this.options.deleteMethod, this.options.deleteUrl, true);\n\t                xhr.send(data);\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return Images;\n\t}();\n\t\n\texports.default = Images;\n\tmodule.exports = exports['default'];\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// medium-editor-insert.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f44bb38e0c20e301dfef","import Core from './Core';\n\nconst MediumEditorInsert = MediumEditor.Extension.extend({\n    name: 'insert',\n\n    addons: {\n        images: true,\n        embeds: true\n    },\n\n    _initializedAddons: {},\n\n    init: function() {\n        MediumEditor.Extension.prototype.init.apply(this, arguments);\n\n        this.core = new Core(this);\n    },\n\n    destroy: function() {\n        this.core.removeButtons();\n    },\n\n    getCore: function() {\n        return this.core;\n    },\n\n    getAddons: function () {\n        return this._initializedAddons;\n    },\n\n    getAddon: function(name) {\n        return this._initializedAddons[name];\n    }\n});\n\nexport default MediumEditorInsert;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/Plugin.js","const utils = {\n    ucfirst: (str) => {\n        return str.charAt(0).toUpperCase() + str.slice(1);\n    },\n\n    generateRandomString: (length = 15) => {\n        return Math.random().toString(36).substr(2, length);\n    },\n\n    getClosestWithClassName: (el, className) => {\n        return MediumEditor.util.traverseUp(el, (element) => {\n            return element.classList.contains(className);\n        });\n    },\n\n    isChildOf: (el, parent) => {\n        return MediumEditor.util.traverseUp(el, (element) => {\n            return element === parent;\n        }) ? true : false;\n    },\n\n    getElementsByClassName: (parents, className) => {\n        const results = [];\n\n        Array.prototype.forEach.call(parents, (editor) => {\n            const elements = editor.getElementsByClassName(className);\n\n            Array.prototype.forEach.call(elements, (element) => {\n                results.push(element);\n            });\n        });\n\n        return results;\n    },\n\n    getElementsByTagName: (parents, tagName) => {\n        const results = [];\n\n        Array.prototype.forEach.call(parents, (editor) => {\n            const elements = editor.getElementsByTagName(tagName);\n\n            Array.prototype.forEach.call(elements, (element) => {\n                results.push(element);\n            });\n        });\n\n        return results;\n    }\n};\n\nexport default utils;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/utils.js","import utils from './utils';\nimport Images from './addons/Images';\nimport Embeds from './addons/Embeds';\n\nexport default class Core {\n\n    constructor(plugin) {\n        this._plugin = plugin;\n        this._editor = this._plugin.base;\n\n        this.initAddons();\n        this.addButtons();\n        this.events();\n    }\n\n    events() {\n        let addonActions;\n\n        // This could be chained when medium-editor 5.15.2 is released\n        // https://github.com/yabwe/medium-editor/pull/1046\n        this._plugin.on(document, 'click', this.toggleButtons.bind(this));\n        this._plugin.on(document, 'keyup', this.toggleButtons.bind(this));\n        this._plugin.on(this.buttons.getElementsByClassName('medium-editor-insert-buttons-show')[0], 'click', this.toggleAddons.bind(this));\n\n        // This could be written in one statement when medium-editor 5.15.2 is released\n        // https://github.com/yabwe/medium-editor/pull/1046\n        addonActions = this.buttons.getElementsByClassName('medium-editor-insert-action');\n        Array.prototype.forEach.call(addonActions, (action) => {\n            this._plugin.on(action, 'click', this.handleAddonClick.bind(this));\n        });\n\n        this._plugin.on(window, 'resize', this.positionButtons.bind(this));\n    }\n\n    initAddons() {\n        // Initialize all default addons, we'll delete ones we don't need later\n        this._plugin._initializedAddons = {\n            images: new Images(this._plugin, this._plugin.addons.images),\n            embeds: new Embeds(this._plugin, this._plugin.addons.embeds)\n        };\n\n        Object.keys(this._plugin.addons).forEach((name) => {\n            const addonOptions = this._plugin.addons[name];\n\n            // If the addon is custom one\n            if (!this._plugin._initializedAddons[name]) {\n                if (typeof addonOptions === 'function') {\n                    this._plugin._initializedAddons[name] = new addonOptions(this._plugin);\n                } else {\n                    window.console.error(`I don't know how to initialize custom \"${name}\" addon!`);\n                }\n            }\n\n            // Delete disabled addon\n            if (!addonOptions) {\n                delete this._plugin._initializedAddons[name];\n            }\n        });\n    }\n\n    addButtons() {\n        const addons = this._plugin.getAddons();\n        let html;\n\n        this.buttons = document.createElement('div');\n        this.buttons.id = `medium-editor-insert-${this._plugin.getEditorId()}`;\n        this.buttons.classList.add('medium-editor-insert-buttons');\n        this.buttons.setAttribute('contentediable', false);\n\n        html = `<a class=\"medium-editor-insert-buttons-show\">+</a>\n            <ul class=\"medium-editor-insert-buttons-addons\">`;\n\n        Object.keys(addons).forEach((name) => {\n            const addon = addons[name];\n\n            html += `<li><a class=\"medium-editor-insert-action\" data-addon=\"${name}\">${addon.label}</a></li>`;\n        });\n\n        html += `</ul>`;\n\n        this.buttons.innerHTML = html;\n\n        document.body.appendChild(this.buttons);\n    }\n\n    removeButtons() {\n        this.buttons.remove();\n    }\n\n    positionButtons() {\n        let el, elPosition, addons, addonButton, addonsStyle, addonButtonStyle, position;\n\n        // Don't position buttons if they aren't active\n        if (this.buttons.classList.contains('medium-editor-insert-buttons-active') === false) {\n            return;\n        }\n\n        el = this._editor.getSelectedParentElement();\n        elPosition = el.getBoundingClientRect();\n        addons = this.buttons.getElementsByClassName('medium-editor-insert-buttons-addons')[0];\n        addonButton = this.buttons.getElementsByClassName('medium-editor-insert-action')[0];\n        addonsStyle = window.getComputedStyle(addons);\n        addonButtonStyle = window.getComputedStyle(addonButton);\n\n        // Calculate position\n        position = {\n            top: window.scrollY + elPosition.top,\n            left: window.scrollX + elPosition.left - parseInt(addonsStyle.left, 10) - parseInt(addonButtonStyle.marginLeft, 10)\n        };\n\n        // If left position is lower than 0, the buttons would be out of the viewport.\n        // In that case, align buttons with the editor\n        position.left = position.left < 0 ? elPosition.left : position.left;\n\n        this.buttons.style.left = `${position.left}px`;\n        this.buttons.style.top = `${position.top}px`;\n    }\n\n    toggleButtons() {\n        const el = this._editor.getSelectedParentElement();\n\n        if (this.shouldDisplayButtonsOnElement(el)) {\n            this.selectElement(el);\n            this.showButtons();\n        } else {\n            this.deselectElement();\n            this.hideButtons();\n        }\n    }\n\n    shouldDisplayButtonsOnElement(el) {\n        const addons = this._plugin.getAddons(),\n            addonClassNames = [];\n        let isAddon = false,\n            belongsToEditor = false;\n\n        // Don't show buttons when the element has text\n        if (el.innerText.trim() !== '') {\n            return false;\n        }\n\n        // Don't show buttons when the editor doesn't belong to editor\n        this._plugin.getEditorElements().forEach((editor) => {\n            if (utils.isChildOf(el, editor)) {\n                belongsToEditor = true;\n                return;\n            }\n        });\n\n        if (!belongsToEditor) {\n            return false;\n        }\n\n        // Get class names used by addons\n        Object.keys(addons).forEach((addonName) => {\n            const addon = addons[addonName];\n            if (addon.elementClassName) {\n                addonClassNames.push(addon.elementClassName);\n            }\n        });\n\n        // Don't show buttons if the element is an addon element\n        // - when the element has an addon class, or some of its parents have it\n        addonClassNames.forEach((className) => {\n            if (el.classList.contains(className) || utils.getClosestWithClassName(el, className)) {\n                isAddon = true;\n                return;\n            }\n        });\n\n        return !isAddon;\n    }\n\n    selectElement(el) {\n        this.selectedElement = el;\n    }\n\n    deselectElement() {\n        this.selectedElement = null;\n    }\n\n    showButtons() {\n        this.buttons.classList.add('medium-editor-insert-buttons-active');\n        this.positionButtons();\n    }\n\n    hideButtons() {\n        this.buttons.classList.remove('medium-editor-insert-buttons-active');\n        this.buttons.classList.remove('medium-editor-insert-addons-active');\n    }\n\n    toggleAddons() {\n        this.buttons.classList.toggle('medium-editor-insert-addons-active');\n    }\n\n    handleAddonClick(e) {\n        const name = e.currentTarget.getAttribute('data-addon');\n\n        e.preventDefault();\n\n        this._plugin.getAddon(name).handleClick(e);\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/Core.js","import utils from './utils';\nimport ToolbarButton from './ToolbarButton';\n\nconst MediumEditorToolbar = MediumEditor.extensions.toolbar;\n\nexport default class Toolbar extends MediumEditorToolbar {\n\n    constructor(options) {\n        super(options);\n\n        this.name = `${options.type}Toolbar`;\n\n        options.buttons.forEach((buttonOptions) => {\n            const button = new ToolbarButton(Object.assign({}, {\n                window: this.plugin.window,\n                document: this.plugin.document,\n                base: this.plugin.base\n            }, buttonOptions));\n\n            button.init();\n            this.plugin.base.extensions.push(button);\n        });\n\n        this.window = options.plugin.window;\n        this.document = options.plugin.document;\n        this.base = options.plugin.base;\n\n        this.init();\n    }\n\n    createToolbar() {\n        const toolbar = this.document.createElement('div');\n\n        toolbar.id = `medium-editor-insert-${this.type}-toolbar-${this.getEditorId()}`;\n        toolbar.className = 'medium-editor-toolbar';\n\n        if (this.static) {\n            toolbar.className += ' static-toolbar';\n        } else if (this.relativeContainer) {\n            toolbar.className += ' medium-editor-relative-toolbar';\n        } else {\n            toolbar.className += ' medium-editor-stalker-toolbar';\n        }\n\n        toolbar.appendChild(this.createToolbarButtons());\n\n        // Add any forms that extensions may have\n        this.forEachExtension((extension) => {\n            if (extension.hasForm) {\n                toolbar.appendChild(extension.getForm());\n            }\n        });\n\n        this.attachEventHandlers();\n\n        return toolbar;\n    }\n\n    createToolbarButtons() {\n        const ul = this.document.createElement('ul');\n        let li,\n            btn,\n            buttons,\n            extension,\n            buttonName,\n            buttonOpts;\n\n        ul.id = `medium-editor-insert-${this.type}-toolbar-actions${this.getEditorId()}`;\n        ul.className = 'medium-editor-toolbar-actions';\n        ul.style.display = 'block';\n\n        this.buttons.forEach((button) => {\n            if (typeof button === 'string') {\n                buttonName = button;\n                buttonOpts = null;\n            } else {\n                buttonName = button.name;\n                buttonOpts = button;\n            }\n\n            // If the button already exists as an extension, it'll be returned\n            // othwerise it'll create the default built-in button\n            extension = this.base.addBuiltInExtension(buttonName, buttonOpts);\n\n            if (extension && typeof extension.getButton === 'function') {\n                btn = extension.getButton(this.base);\n                li = this.document.createElement('li');\n                if (MediumEditor.util.isElement(btn)) {\n                    li.appendChild(btn);\n                } else {\n                    li.innerHTML = btn;\n                }\n                ul.appendChild(li);\n            }\n        }, this);\n\n        buttons = ul.querySelectorAll('button');\n        if (buttons.length > 0) {\n            buttons[0].classList.add(this.firstButtonClass);\n            buttons[buttons.length - 1].classList.add(this.lastButtonClass);\n        }\n\n        return ul;\n    }\n\n    checkState() {\n        let activeElements;\n\n        if (this.base.preventSelectionUpdates) {\n            return;\n        }\n\n        // Wait for elements to be selected\n        setTimeout(() => {\n            activeElements = utils.getElementsByClassName(this.getEditorElements(), this.activeClassName);\n\n            // Hide toolbar when no elements are selected\n            if (activeElements.length === 0) {\n                return this.hideToolbar();\n            }\n\n            // Now we know there's a focused editable with a selection\n            this.showAndUpdateToolbar();\n        }, 10);\n    }\n\n    setToolbarPosition() {\n        const container = utils.getElementsByClassName(this.getEditorElements(), this.activeClassName)[0];\n        let anchorPreview;\n\n        // If there isn't a valid selection, bail\n        if (!container) {\n            return this;\n        }\n\n        this.showToolbar();\n        this.positionStaticToolbar(container);\n\n        anchorPreview = this.base.getExtensionByName('anchor-preview');\n\n        if (anchorPreview && typeof anchorPreview.hidePreview === 'function') {\n            anchorPreview.hidePreview();\n        }\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/Toolbar.js","const ToolbarButton = MediumEditor.extensions.button.extend({\n    init: function() {\n        this.button = this.document.createElement('button');\n        this.button.classList.add('medium-editor-action');\n        this.button.innerHTML = `<b>${this.label}</b>`;\n\n        this.on(this.button, 'click', this.handleClick.bind(this));\n    },\n\n    getButton: function() {\n      return this.button;\n    },\n\n    handleClick: function() {\n        console.log(`${this.name} clicked!`);\n    }\n});\n\nexport default ToolbarButton;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/ToolbarButton.js","export default class Embeds {\n\n\tconstructor(plugin, options) {\n\t\tthis._plugin = plugin;\n        this._editor = this._plugin.base;\n\n\t\tthis.options = {\n\t\t\tlabel: '<span class=\"fa fa-youtube-play\"></span>'\n\t\t};\n\n\t\tObject.assign(this.options, options);\n\n\t\tthis.label = this.options.label;\n\t}\n\n\thandleClick() {\n\t\twindow.console.log('embeds clicked');\n\t}\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/addons/Embeds.js","import utils from '../utils';\nimport Toolbar from '../Toolbar';\n\nexport default class Images {\n\n\tconstructor(plugin, options) {\n\t\tthis.options = {\n\t\t\tlabel: '<span class=\"fa fa-camera\"></span>',\n\t\t\tpreview: true,\n\t\t\tuploadUrl: 'upload.php',\n            deleteUrl: 'delete.php',\n            deleteMethod: 'DELETE',\n            deleteData: {}\n\t\t};\n\n\t\tObject.assign(this.options, options);\n\n        this._plugin = plugin;\n        this._editor = this._plugin.base;\n        this.elementClassName = 'medium-editor-insert-images';\n        this.activeClassName = 'medium-editor-insert-image-active';\n\t\tthis.label = this.options.label;\n\n        this.initToolbar();\n        this.events();\n\t}\n\n    events() {\n        this._plugin.on(document, 'click', this.unselectImage.bind(this));\n        this._plugin.on(document, 'keydown', this.removeImage.bind(this));\n\n        this._plugin.getEditorElements().forEach((editor) => {\n            this._plugin.on(editor, 'click', this.selectImage.bind(this));\n        });\n    }\n\n\thandleClick() {\n\t\tthis._input = document.createElement('input');\n\t\tthis._input.type = 'file';\n\t\tthis._input.multiple = true;\n\n\t\tthis._plugin.on(this._input, 'change', this.uploadFiles.bind(this));\n\n\t\tthis._input.click();\n\t}\n\n    initToolbar() {\n        this.toolbar = new Toolbar({\n            plugin: this._plugin,\n            type: 'images',\n            activeClassName: this.activeClassName,\n            buttons: [\n                {\n                    name: 'align-left',\n                    action: 'left',\n                    label: 'Left'\n                },\n                {\n                    name: 'align-center',\n                    action: 'center',\n                    label: 'Center'\n                },\n                {\n                    name: 'align-right',\n                    action: 'right',\n                    label: 'Right'\n                }\n            ]\n        });\n\n        this._editor.extensions.push(this.toolbar);\n    }\n\n\tuploadFiles() {\n\t\tconst paragraph = this._plugin.getCore().selectedElement;\n\n        // Replace paragraph with div, because figure is a block element\n        // and can't be nested inside paragraphs\n\t\tif (paragraph.nodeName.toLowerCase() === 'p') {\n\t\t\tconst div = document.createElement('div');\n\n\t\t\tparagraph.parentNode.insertBefore(div, paragraph);\n\t\t\tthis._plugin.getCore().selectElement(div);\n\t\t\tparagraph.remove();\n\t\t}\n\n\t\tArray.prototype.forEach.call(this._input.files, (file) => {\n            // Generate uid for this image, so we can identify it later\n            // and we can replace preview image with uploaded one\n\t\t\tconst uid = utils.generateRandomString();\n\n\t\t\tif (this.options.preview) {\n\t\t\t\tthis.preview(file, uid);\n\t\t\t}\n\n\t\t\tthis.upload(file, uid);\n\t\t});\n\n\t\tthis._plugin.getCore().hideButtons();\n\t}\n\n\tpreview(file, uid) {\n\t\tconst reader = new FileReader();\n\n\t\treader.onload = (e) => {\n\t\t\tthis.insertImage(e.target.result, uid);\n\t\t};\n\n\t\treader.readAsDataURL(file);\n\t}\n\n\tupload(file, uid) {\n\t\tconst xhr = new XMLHttpRequest(),\n\t\t\tdata = new FormData();\n\n\t\txhr.open(\"POST\", this.options.uploadUrl, true);\n\t\txhr.onreadystatechange = () => {\n            if (xhr.readyState === 4 && xhr.status === 200) {\n                const image = this._plugin.getCore().selectedElement.querySelector(`[data-uid=\"${uid}\"]`);\n\n                if (image) {\n                    this.replaceImage(image, xhr.responseText);\n                } else {\n                    this.insertImage(xhr.responseText);\n                }\n            }\n\t\t};\n\n\t\tdata.append(\"file\", file);\n\t\txhr.send(data);\n\t}\n\n    insertImage(url, uid) {\n        const el = this._plugin.getCore().selectedElement,\n            figure = document.createElement('figure'),\n            img = document.createElement('img');\n        let domImage;\n\n        img.alt = '';\n\n        if (uid) {\n            img.setAttribute('data-uid', uid);\n        }\n\n        // If we're dealing with a preview image,\n        // we don't have to preload it before displaying\n        if (url.match(/^data:/)) {\n            img.src = url;\n            figure.appendChild(img);\n            el.appendChild(figure);\n        } else {\n            domImage = new Image();\n            domImage.onload = () => {\n                img.src = domImage.src;\n                figure.appendChild(img);\n                el.appendChild(figure);\n            };\n            domImage.src = url;\n        }\n\n        el.classList.add(this.elementClassName);\n\n        // Return domImage so we can test this function easily\n        return domImage;\n    }\n\n    replaceImage(image, url) {\n        const domImage = new Image();\n\n        domImage.onload = () => {\n            image.src = domImage.src;\n            image.removeAttribute('data-uid');\n        };\n\n        domImage.src = url;\n\n        // Return domImage so we can test this function easily\n        return domImage;\n    }\n\n    selectImage(e) {\n        const el = e.target;\n\n        if (el.nodeName.toLowerCase() === 'img' && utils.getClosestWithClassName(el, this.elementClassName)) {\n            el.classList.add(this.activeClassName);\n\n            this._editor.selectElement(el);\n        }\n    }\n\n    unselectImage(e) {\n        const el = e.target;\n        let clickedImage, images;\n\n        // Unselect all selected images. If an image is clicked, unselect all except this one.\n        if (el.nodeName.toLowerCase() === 'img' && el.classList.contains(this.activeClassName)) {\n            clickedImage = el;\n        }\n\n        images = utils.getElementsByClassName(this._plugin.getEditorElements(), this.activeClassName);\n        Array.prototype.forEach.call(images, (image) => {\n            if (image !== clickedImage) {\n                image.classList.remove(this.activeClassName);\n            }\n        });\n    }\n\n    removeImage(e) {\n        if ([MediumEditor.util.keyCode.BACKSPACE, MediumEditor.util.keyCode.DELETE].indexOf(e.which) > -1) {\n            const images = utils.getElementsByClassName(this._plugin.getEditorElements(), this.activeClassName),\n                selection = window.getSelection();\n            let selectedHtml;\n\n            // Remove image even if it's not selected, but backspace/del is pressed in text\n            if (selection && selection.rangeCount) {\n                const range = MediumEditor.selection.getSelectionRange(document),\n                    focusedElement = MediumEditor.selection.getSelectedParentElement(range),\n                    caretPosition = MediumEditor.selection.getCaretOffsets(focusedElement).left;\n                let sibling;\n\n                // Is backspace pressed and caret is at the beginning of a paragraph, get previous element\n                if (e.which === MediumEditor.util.keyCode.BACKSPACE && caretPosition === 0) {\n                    sibling = focusedElement.previousElementSibling;\n                // Is del pressed and caret is at the end of a paragraph, get next element\n                } else if (e.which === MediumEditor.util.keyCode.DELETE && caretPosition === focusedElement.innerText.length) {\n                    sibling = focusedElement.nextElementSibling;\n                }\n\n                if (sibling && sibling.classList.contains('medium-editor-insert-images')) {\n                    const newImages = sibling.getElementsByTagName('img');\n                    Array.prototype.forEach.call(newImages, (image) => {\n                        images.push(image);\n                    });\n                }\n\n                // If text is selected, find images in the selection\n                selectedHtml = MediumEditor.selection.getSelectionHtml(document);\n                if (selectedHtml) {\n                    const temp = document.createElement('div');\n                    let wrappers, newImages;\n                    temp.innerHTML = selectedHtml;\n\n                    wrappers = temp.getElementsByClassName('medium-editor-insert-images');\n                    newImages = utils.getElementsByTagName(wrappers, 'img');\n\n                    Array.prototype.forEach.call(newImages, (image) => {\n                        images.push(image);\n                    });\n                }\n            }\n\n            if (images.length) {\n                if (!selectedHtml) {\n                    e.preventDefault();\n                }\n\n                images.forEach((image) => {\n                    const wrapper = utils.getClosestWithClassName(image, 'medium-editor-insert-images');\n                    this.deleteFile(image.src);\n\n                    image.parentNode.remove();\n\n                    // If wrapper has no images anymore, remove it\n                    if (wrapper.childElementCount === 0) {\n                        const next = wrapper.nextElementSibling,\n                            prev = wrapper.previousElementSibling;\n\n                        wrapper.remove();\n\n                        // If there is no selection, move cursor at the beginning of next paragraph (if delete is pressed),\n                        // or nove it at the end of previous paragraph (if backspace is pressed)\n                        if (!selectedHtml) {\n                            if (next || prev) {\n                                if ((next && e.which === MediumEditor.util.keyCode.DELETE) || !prev) {\n                                    MediumEditor.selection.moveCursor(document, next, 0);\n                                } else {\n                                    MediumEditor.selection.moveCursor(document, prev.lastChild, prev.lastChild.textContent.length);\n                                }\n                            }\n                        }\n                    }\n                });\n            }\n        }\n    }\n\n    deleteFile(image) {\n        if (this.options.deleteUrl) {\n            const xhr = new XMLHttpRequest(),\n                data = Object.assign({}, {\n                    file: image\n                }, this.options.deleteData);\n\n            xhr.open(this.options.deleteMethod, this.options.deleteUrl, true);\n            xhr.send(data);\n        }\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/addons/Images.js"],"sourceRoot":""}