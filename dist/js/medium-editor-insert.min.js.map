{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///medium-editor-insert.min.js","webpack:///webpack/bootstrap bc924b3e6778d27193ac","webpack:///./src/js/Plugin.js","webpack:///./src/js/utils.js","webpack:///./src/js/Toolbar.js","webpack:///./src/js/Core.js","webpack:///./src/js/ToolbarButton.js","webpack:///./src/js/addons/Embeds.js","webpack:///./src/js/addons/Images.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_Core","_Core2","MediumEditorInsert","MediumEditor","Extension","extend","name","addons","images","embeds","_initializedAddons","init","prototype","apply","arguments","core","destroy","removeButtons","getCore","getAddons","getAddon","utils","ucfirst","str","charAt","toUpperCase","slice","generateRandomString","length","undefined","Math","random","toString","substr","getClosestWithClassName","el","className","util","traverseUp","element","classList","contains","isChildOf","parent","getElementsByClassName","parents","results","Array","forEach","editor","elements","push","getElementsByTagName","tagName","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","_createClass","defineProperties","target","props","i","descriptor","key","protoProps","staticProps","_utils","_utils2","_ToolbarButton","_ToolbarButton2","MediumEditorToolbar","extensions","toolbar","Toolbar","_MediumEditorToolbar","options","_this","getPrototypeOf","type","buttons","buttonOptions","button","assign","window","plugin","document","base","createElement","getEditorId","static","relativeContainer","appendChild","createToolbarButtons","forEachExtension","extension","hasForm","getForm","attachEventHandlers","_this2","ul","li","btn","buttonName","buttonOpts","style","display","addBuiltInExtension","getButton","isElement","innerHTML","querySelectorAll","add","firstButtonClass","lastButtonClass","_this3","activeElements","preventSelectionUpdates","setTimeout","getEditorElements","activeClassName","hideToolbar","showAndUpdateToolbar","container","anchorPreview","showToolbar","positionStaticToolbar","getExtensionByName","hidePreview","_Images","_Images2","_Embeds","_Embeds2","Core","_plugin","_editor","initAddons","addButtons","events","addonActions","on","toggleButtons","bind","toggleAddons","action","handleAddonClick","positionButtons","keys","addonOptions","console","error","html","setAttribute","addon","label","body","remove","elPosition","addonButton","addonsStyle","addonButtonStyle","position","getSelectedParentElement","getBoundingClientRect","getComputedStyle","top","scrollY","left","scrollX","parseInt","marginLeft","shouldDisplayButtonsOnElement","selectElement","showButtons","hideButtons","addonClassNames","isAddon","belongsToEditor","innerText","trim","addonName","elementClassName","selectedElement","toggle","e","currentTarget","getAttribute","preventDefault","handleClick","ToolbarButton","onClick","_Toolbar","_Toolbar2","Embeds","placeholder","oembedProxy","captions","captionPlaceholder","storeMeta","styles","wide","right","actions","clicked","parseOnPaste","placeholderClassName","loadingClassName","descriptionContainerClassName","descriptionClassName","overlayClassName","descriptionPlaceholder","initToolbar","unselectEmbed","handleKey","selectEmbed","selectedEl","activeEmbedElement","clickedEmbed","embed","isDescriptionElement","keyCode","ENTER","indexOf","which","BACKSPACE","DELETE","removeEmbed","instanceHandlePaste","handlePaste","instanceHandleKeyDown","handleKeyDown","handleBlur","focus","evt","cancelEmbed","pastedUrl","clipboardData","getData","linkRegEx","RegExp","linkRegEx2","test","oembed","parseUrl","changeAlign","url","pasted","urlOut","xhr","XMLHttpRequest","open","onreadystatechange","readyState","status","data","JSON","parse","responseText","send","join","replace","info","figure","descriptionContainer","description","metacontainer","overlay","lastEl","contentEditable","dataset","replaceWith","parentNode","lastChild","nodeType","previousSibling","lastP","FB","XFBML","onInsert","log","removeAttribute","hidePlaceholder","off","instanceHandleKeyUp","Images","preview","uploadUrl","deleteUrl","deleteMethod","deleteData","activeImageElement","unselectImage","selectImage","onInsertButtonClick","uid","imageUrl","insertImage","_input","multiple","uploadFiles","click","files","file","upload","_this4","reader","FileReader","onload","result","readAsDataURL","FormData","append","isLoader","paragraph","nodeName","toLowerCase","div","insertBefore","image","querySelector","replaceImage","addImage","_this5","img","domImage","alt","match","src","Image","nextSibling","_this6","clickedImage","removeImage","_this7","selection","getSelection","selectedHtml","rangeCount","range","getSelectionRange","focusedElement","caretPosition","getCaretOffsets","sibling","previousElementSibling","nextElementSibling","newImages","getSelectionHtml","temp","wrappers","wrapper","deleteFile","childElementCount","next","prev","moveCursor","textContent"],"mappings":"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","file":"medium-editor-insert.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MediumEditorInsert\"] = factory();\n\telse\n\t\troot[\"MediumEditorInsert\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"MediumEditorInsert\"] = factory();\n\telse\n\t\troot[\"MediumEditorInsert\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _Core = __webpack_require__(3);\n\t\n\tvar _Core2 = _interopRequireDefault(_Core);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar MediumEditorInsert = MediumEditor.Extension.extend({\n\t    name: 'insert',\n\t\n\t    addons: {\n\t        images: true,\n\t        embeds: true\n\t    },\n\t\n\t    _initializedAddons: {},\n\t\n\t    init: function init() {\n\t        MediumEditor.Extension.prototype.init.apply(this, arguments);\n\t\n\t        this.core = new _Core2.default(this);\n\t    },\n\t\n\t    destroy: function destroy() {\n\t        this.core.removeButtons();\n\t    },\n\t\n\t    getCore: function getCore() {\n\t        return this.core;\n\t    },\n\t\n\t    getAddons: function getAddons() {\n\t        return this._initializedAddons;\n\t    },\n\t\n\t    getAddon: function getAddon(name) {\n\t        return this._initializedAddons[name];\n\t    }\n\t});\n\t\n\texports.default = MediumEditorInsert;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\tvar utils = {\n\t    ucfirst: function ucfirst(str) {\n\t        return str.charAt(0).toUpperCase() + str.slice(1);\n\t    },\n\t\n\t    generateRandomString: function generateRandomString() {\n\t        var length = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 15;\n\t\n\t        return Math.random().toString(36).substr(2, length);\n\t    },\n\t\n\t    getClosestWithClassName: function getClosestWithClassName(el, className) {\n\t        return MediumEditor.util.traverseUp(el, function (element) {\n\t            return element.classList.contains(className);\n\t        });\n\t    },\n\t\n\t    isChildOf: function isChildOf(el, parent) {\n\t        return MediumEditor.util.traverseUp(el, function (element) {\n\t            return element === parent;\n\t        }) ? true : false;\n\t    },\n\t\n\t    getElementsByClassName: function getElementsByClassName(parents, className) {\n\t        var results = [];\n\t\n\t        Array.prototype.forEach.call(parents, function (editor) {\n\t            var elements = editor.getElementsByClassName(className);\n\t\n\t            Array.prototype.forEach.call(elements, function (element) {\n\t                results.push(element);\n\t            });\n\t        });\n\t\n\t        return results;\n\t    },\n\t\n\t    getElementsByTagName: function getElementsByTagName(parents, tagName) {\n\t        var results = [];\n\t\n\t        Array.prototype.forEach.call(parents, function (editor) {\n\t            var elements = editor.getElementsByTagName(tagName);\n\t\n\t            Array.prototype.forEach.call(elements, function (element) {\n\t                results.push(element);\n\t            });\n\t        });\n\t\n\t        return results;\n\t    }\n\t};\n\t\n\texports.default = utils;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _utils = __webpack_require__(1);\n\t\n\tvar _utils2 = _interopRequireDefault(_utils);\n\t\n\tvar _ToolbarButton = __webpack_require__(4);\n\t\n\tvar _ToolbarButton2 = _interopRequireDefault(_ToolbarButton);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\t\n\tfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\t\n\tvar MediumEditorToolbar = MediumEditor.extensions.toolbar;\n\t\n\tvar Toolbar = function (_MediumEditorToolbar) {\n\t    _inherits(Toolbar, _MediumEditorToolbar);\n\t\n\t    function Toolbar(options) {\n\t        _classCallCheck(this, Toolbar);\n\t\n\t        var _this = _possibleConstructorReturn(this, (Toolbar.__proto__ || Object.getPrototypeOf(Toolbar)).call(this, options));\n\t\n\t        _this.name = options.type + 'Toolbar';\n\t\n\t        options.buttons.forEach(function (buttonOptions) {\n\t            var button = new _ToolbarButton2.default(Object.assign({}, {\n\t                window: _this.plugin.window,\n\t                document: _this.plugin.document,\n\t                base: _this.plugin.base\n\t            }, buttonOptions));\n\t\n\t            button.init();\n\t            _this.plugin.base.extensions.push(button);\n\t        });\n\t\n\t        _this.window = options.plugin.window;\n\t        _this.document = options.plugin.document;\n\t        _this.base = options.plugin.base;\n\t\n\t        _this.init();\n\t        return _this;\n\t    }\n\t\n\t    _createClass(Toolbar, [{\n\t        key: 'createToolbar',\n\t        value: function createToolbar() {\n\t            var toolbar = this.document.createElement('div');\n\t\n\t            toolbar.id = 'medium-editor-insert-' + this.type + '-toolbar-' + this.getEditorId();\n\t            toolbar.className = 'medium-editor-toolbar';\n\t\n\t            if (this.static) {\n\t                toolbar.className += ' static-toolbar';\n\t            } else if (this.relativeContainer) {\n\t                toolbar.className += ' medium-editor-relative-toolbar';\n\t            } else {\n\t                toolbar.className += ' medium-editor-stalker-toolbar';\n\t            }\n\t\n\t            toolbar.appendChild(this.createToolbarButtons());\n\t\n\t            // Add any forms that extensions may have\n\t            this.forEachExtension(function (extension) {\n\t                if (extension.hasForm) {\n\t                    toolbar.appendChild(extension.getForm());\n\t                }\n\t            });\n\t\n\t            this.attachEventHandlers();\n\t\n\t            return toolbar;\n\t        }\n\t    }, {\n\t        key: 'createToolbarButtons',\n\t        value: function createToolbarButtons() {\n\t            var _this2 = this;\n\t\n\t            var ul = this.document.createElement('ul');\n\t            var li = void 0,\n\t                btn = void 0,\n\t                buttons = void 0,\n\t                extension = void 0,\n\t                buttonName = void 0,\n\t                buttonOpts = void 0;\n\t\n\t            ul.id = 'medium-editor-insert-' + this.type + '-toolbar-actions' + this.getEditorId();\n\t            ul.className = 'medium-editor-toolbar-actions';\n\t            ul.style.display = 'block';\n\t\n\t            this.buttons.forEach(function (button) {\n\t                if (typeof button === 'string') {\n\t                    buttonName = button;\n\t                    buttonOpts = null;\n\t                } else {\n\t                    buttonName = button.name;\n\t                    buttonOpts = button;\n\t                }\n\t\n\t                // If the button already exists as an extension, it'll be returned\n\t                // othwerise it'll create the default built-in button\n\t                extension = _this2.base.addBuiltInExtension(buttonName, buttonOpts);\n\t\n\t                if (extension && typeof extension.getButton === 'function') {\n\t                    btn = extension.getButton(_this2.base);\n\t                    li = _this2.document.createElement('li');\n\t                    if (MediumEditor.util.isElement(btn)) {\n\t                        li.appendChild(btn);\n\t                    } else {\n\t                        li.innerHTML = btn;\n\t                    }\n\t                    ul.appendChild(li);\n\t                }\n\t            }, this);\n\t\n\t            buttons = ul.querySelectorAll('button');\n\t            if (buttons.length > 0) {\n\t                buttons[0].classList.add(this.firstButtonClass);\n\t                buttons[buttons.length - 1].classList.add(this.lastButtonClass);\n\t            }\n\t\n\t            return ul;\n\t        }\n\t    }, {\n\t        key: 'checkState',\n\t        value: function checkState() {\n\t            var _this3 = this;\n\t\n\t            var activeElements = void 0;\n\t\n\t            if (this.base.preventSelectionUpdates) {\n\t                return;\n\t            }\n\t\n\t            // Wait for elements to be selected\n\t            setTimeout(function () {\n\t                activeElements = _utils2.default.getElementsByClassName(_this3.getEditorElements(), _this3.activeClassName);\n\t\n\t                // Hide toolbar when no elements are selected\n\t                if (activeElements.length === 0) {\n\t                    return _this3.hideToolbar();\n\t                }\n\t\n\t                // Now we know there's a focused editable with a selection\n\t                _this3.showAndUpdateToolbar();\n\t            }, 10);\n\t        }\n\t    }, {\n\t        key: 'setToolbarPosition',\n\t        value: function setToolbarPosition() {\n\t            var container = _utils2.default.getElementsByClassName(this.getEditorElements(), this.activeClassName)[0];\n\t            var anchorPreview = void 0;\n\t\n\t            // If there isn't a valid selection, bail\n\t            if (!container) {\n\t                return this;\n\t            }\n\t\n\t            this.showToolbar();\n\t            this.positionStaticToolbar(container);\n\t\n\t            anchorPreview = this.base.getExtensionByName('anchor-preview');\n\t\n\t            if (anchorPreview && typeof anchorPreview.hidePreview === 'function') {\n\t                anchorPreview.hidePreview();\n\t            }\n\t        }\n\t    }]);\n\t\n\t    return Toolbar;\n\t}(MediumEditorToolbar);\n\t\n\texports.default = Toolbar;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _utils = __webpack_require__(1);\n\t\n\tvar _utils2 = _interopRequireDefault(_utils);\n\t\n\tvar _Images = __webpack_require__(6);\n\t\n\tvar _Images2 = _interopRequireDefault(_Images);\n\t\n\tvar _Embeds = __webpack_require__(5);\n\t\n\tvar _Embeds2 = _interopRequireDefault(_Embeds);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Core = function () {\n\t    function Core(plugin) {\n\t        _classCallCheck(this, Core);\n\t\n\t        this._plugin = plugin;\n\t        this._editor = this._plugin.base;\n\t\n\t        this.initAddons();\n\t        this.addButtons();\n\t        this.events();\n\t    }\n\t\n\t    _createClass(Core, [{\n\t        key: 'events',\n\t        value: function events() {\n\t            var _this = this;\n\t\n\t            var addonActions = void 0;\n\t\n\t            // This could be chained when medium-editor 5.15.2 is released\n\t            // https://github.com/yabwe/medium-editor/pull/1046\n\t            this._plugin.on(document, 'click', this.toggleButtons.bind(this));\n\t            this._plugin.on(document, 'keyup', this.toggleButtons.bind(this));\n\t            this._plugin.on(this.buttons.getElementsByClassName('medium-editor-insert-buttons-show')[0], 'click', this.toggleAddons.bind(this));\n\t\n\t            // This could be written in one statement when medium-editor 5.15.2 is released\n\t            // https://github.com/yabwe/medium-editor/pull/1046\n\t            addonActions = this.buttons.getElementsByClassName('medium-editor-insert-action');\n\t            Array.prototype.forEach.call(addonActions, function (action) {\n\t                _this._plugin.on(action, 'click', _this.handleAddonClick.bind(_this));\n\t            });\n\t\n\t            this._plugin.on(window, 'resize', this.positionButtons.bind(this));\n\t        }\n\t    }, {\n\t        key: 'initAddons',\n\t        value: function initAddons() {\n\t            var _this2 = this;\n\t\n\t            // Initialize all default addons, we'll delete ones we don't need later\n\t            this._plugin._initializedAddons = {\n\t                images: new _Images2.default(this._plugin, this._plugin.addons.images),\n\t                embeds: new _Embeds2.default(this._plugin, this._plugin.addons.embeds)\n\t            };\n\t\n\t            Object.keys(this._plugin.addons).forEach(function (name) {\n\t                var addonOptions = _this2._plugin.addons[name];\n\t\n\t                // If the addon is custom one\n\t                if (!_this2._plugin._initializedAddons[name]) {\n\t                    if (typeof addonOptions === 'function') {\n\t                        _this2._plugin._initializedAddons[name] = new addonOptions(_this2._plugin);\n\t                    } else {\n\t                        window.console.error('I don\\'t know how to initialize custom \"' + name + '\" addon!');\n\t                    }\n\t                }\n\t\n\t                // Delete disabled addon\n\t                if (!addonOptions) {\n\t                    delete _this2._plugin._initializedAddons[name];\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'addButtons',\n\t        value: function addButtons() {\n\t            var addons = this._plugin.getAddons();\n\t            var html = void 0;\n\t\n\t            this.buttons = document.createElement('div');\n\t            this.buttons.id = 'medium-editor-insert-' + this._plugin.getEditorId();\n\t            this.buttons.classList.add('medium-editor-insert-buttons');\n\t            this.buttons.setAttribute('contentediable', false);\n\t\n\t            html = '<a class=\"medium-editor-insert-buttons-show\">+</a>\\n            <ul class=\"medium-editor-insert-buttons-addons\">';\n\t\n\t            Object.keys(addons).forEach(function (name) {\n\t                var addon = addons[name];\n\t\n\t                html += '<li><a class=\"medium-editor-insert-action\" data-addon=\"' + name + '\">' + addon.label + '</a></li>';\n\t            });\n\t\n\t            html += '</ul>';\n\t\n\t            this.buttons.innerHTML = html;\n\t\n\t            document.body.appendChild(this.buttons);\n\t        }\n\t    }, {\n\t        key: 'removeButtons',\n\t        value: function removeButtons() {\n\t            this.buttons.remove();\n\t        }\n\t    }, {\n\t        key: 'positionButtons',\n\t        value: function positionButtons() {\n\t            var el = void 0,\n\t                elPosition = void 0,\n\t                addons = void 0,\n\t                addonButton = void 0,\n\t                addonsStyle = void 0,\n\t                addonButtonStyle = void 0,\n\t                position = void 0;\n\t\n\t            // Don't position buttons if they aren't active\n\t            if (this.buttons.classList.contains('medium-editor-insert-buttons-active') === false) {\n\t                return;\n\t            }\n\t\n\t            el = this._editor.getSelectedParentElement();\n\t            elPosition = el.getBoundingClientRect();\n\t            addons = this.buttons.getElementsByClassName('medium-editor-insert-buttons-addons')[0];\n\t            addonButton = this.buttons.getElementsByClassName('medium-editor-insert-action')[0];\n\t            addonsStyle = window.getComputedStyle(addons);\n\t            addonButtonStyle = window.getComputedStyle(addonButton);\n\t\n\t            // Calculate position\n\t            position = {\n\t                top: window.scrollY + elPosition.top,\n\t                left: window.scrollX + elPosition.left - parseInt(addonsStyle.left, 10) - parseInt(addonButtonStyle.marginLeft, 10)\n\t            };\n\t\n\t            // If left position is lower than 0, the buttons would be out of the viewport.\n\t            // In that case, align buttons with the editor\n\t            position.left = position.left < 0 ? elPosition.left : position.left;\n\t\n\t            this.buttons.style.left = position.left + 'px';\n\t            this.buttons.style.top = position.top + 'px';\n\t        }\n\t    }, {\n\t        key: 'toggleButtons',\n\t        value: function toggleButtons() {\n\t            var el = this._editor.getSelectedParentElement();\n\t\n\t            if (this.shouldDisplayButtonsOnElement(el)) {\n\t                this.selectElement(el);\n\t                this.showButtons();\n\t            } else {\n\t                this.hideButtons();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'shouldDisplayButtonsOnElement',\n\t        value: function shouldDisplayButtonsOnElement(el) {\n\t            var addons = this._plugin.getAddons(),\n\t                addonClassNames = [];\n\t            var isAddon = false,\n\t                belongsToEditor = false;\n\t\n\t            // Don't show buttons when the element has text\n\t            if (el.innerText.trim() !== '') {\n\t                return false;\n\t            }\n\t\n\t            // Don't show buttons when the editor doesn't belong to editor\n\t            this._plugin.getEditorElements().forEach(function (editor) {\n\t                if (_utils2.default.isChildOf(el, editor)) {\n\t                    belongsToEditor = true;\n\t                    return;\n\t                }\n\t            });\n\t\n\t            if (!belongsToEditor) {\n\t                return false;\n\t            }\n\t\n\t            // Get class names used by addons\n\t            Object.keys(addons).forEach(function (addonName) {\n\t                var addon = addons[addonName];\n\t                if (addon.elementClassName) {\n\t                    addonClassNames.push(addon.elementClassName);\n\t                }\n\t            });\n\t\n\t            // Don't show buttons if the element is an addon element\n\t            // - when the element has an addon class, or some of its parents have it\n\t            addonClassNames.forEach(function (className) {\n\t                if (el.classList.contains(className) || _utils2.default.getClosestWithClassName(el, className)) {\n\t                    isAddon = true;\n\t                    return;\n\t                }\n\t            });\n\t\n\t            return !isAddon;\n\t        }\n\t    }, {\n\t        key: 'selectElement',\n\t        value: function selectElement(el) {\n\t            this.selectedElement = el;\n\t        }\n\t    }, {\n\t        key: 'showButtons',\n\t        value: function showButtons() {\n\t            this.buttons.classList.add('medium-editor-insert-buttons-active');\n\t            this.positionButtons();\n\t        }\n\t    }, {\n\t        key: 'hideButtons',\n\t        value: function hideButtons() {\n\t            this.buttons.classList.remove('medium-editor-insert-buttons-active');\n\t            this.buttons.classList.remove('medium-editor-insert-addons-active');\n\t        }\n\t    }, {\n\t        key: 'toggleAddons',\n\t        value: function toggleAddons() {\n\t            this.buttons.classList.toggle('medium-editor-insert-addons-active');\n\t        }\n\t    }, {\n\t        key: 'handleAddonClick',\n\t        value: function handleAddonClick(e) {\n\t            var name = e.currentTarget.getAttribute('data-addon');\n\t            e.preventDefault();\n\t\n\t            this._plugin.getAddon(name).handleClick(e);\n\t            this.hideButtons();\n\t        }\n\t    }]);\n\t\n\t    return Core;\n\t}();\n\t\n\texports.default = Core;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\tvar ToolbarButton = MediumEditor.extensions.button.extend({\n\t    init: function init() {\n\t        this.button = this.document.createElement('button');\n\t        this.button.classList.add('medium-editor-action');\n\t        this.button.innerHTML = '<b>' + this.label + '</b>';\n\t\n\t        this.on(this.button, 'click', this.handleClick.bind(this));\n\t    },\n\t\n\t    getButton: function getButton() {\n\t        return this.button;\n\t    },\n\t\n\t    handleClick: function handleClick() {\n\t        this.onClick();\n\t    }\n\t});\n\t\n\texports.default = ToolbarButton;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _utils = __webpack_require__(1);\n\t\n\tvar _utils2 = _interopRequireDefault(_utils);\n\t\n\tvar _Toolbar = __webpack_require__(2);\n\t\n\tvar _Toolbar2 = _interopRequireDefault(_Toolbar);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Embeds = function () {\n\t  function Embeds(plugin, options) {\n\t    _classCallCheck(this, Embeds);\n\t\n\t    this.options = {\n\t      label: '<span class=\"fa fa-youtube-play\"></span>',\n\t      placeholder: 'Paste a YouTube, Vimeo, Facebook, Twitter or Instagram link and press Enter',\n\t      oembedProxy: 'http://medium.iframe.ly/api/oembed?omit_script=1&iframe=1',\n\t      captions: true,\n\t      captionPlaceholder: 'Type caption (optional)',\n\t      storeMeta: false,\n\t      styles: {\n\t        wide: {\n\t          label: '<span class=\"fa fa-align-justify\"></span>'\n\t          // added: function ($el) {},\n\t          // removed: function ($el) {}\n\t        },\n\t        left: {\n\t          label: '<span class=\"fa fa-align-left\"></span>'\n\t          // added: function ($el) {},\n\t          // removed: function ($el) {}\n\t        },\n\t        right: {\n\t          label: '<span class=\"fa fa-align-right\"></span>'\n\t          // added: function ($el) {},\n\t          // removed: function ($el) {}\n\t        }\n\t      },\n\t      actions: {\n\t        remove: {\n\t          label: '<span class=\"fa fa-times\"></span>',\n\t          clicked: function clicked() {\n\t            // var $event = $.Event('keydown');\n\t\n\t            // $event.which = 8;\n\t            // $(document).trigger($event);\n\t          }\n\t        }\n\t      },\n\t      parseOnPaste: false\n\t    };\n\t\n\t    Object.assign(this.options, options);\n\t\n\t    this._plugin = plugin;\n\t    this._editor = this._plugin.base;\n\t\n\t    this.activeClassName = 'medium-editor-insert-embeds-active';\n\t    this.placeholderClassName = 'medium-editor-insert-embeds-placeholder';\n\t    this.elementClassName = 'medium-editor-insert-embeds';\n\t    this.loadingClassName = 'medium-editor-insert-embeds-loading';\n\t    this.activeClassName = 'medium-editor-insert-embed-active';\n\t    this.descriptionContainerClassName = 'medium-editor-embed-embed-description-container';\n\t    this.descriptionClassName = 'medium-editor-embed-embed-description';\n\t    this.overlayClassName = 'medium-editor-insert-embeds-overlay';\n\t\n\t    this.label = this.options.label;\n\t    this.descriptionPlaceholder = this.options.descriptionPlaceholder;\n\t\n\t    this.initToolbar();\n\t    this.events();\n\t  }\n\t\n\t  _createClass(Embeds, [{\n\t    key: 'events',\n\t    value: function events() {\n\t      var _this = this;\n\t\n\t      this._plugin.on(document, 'click', this.unselectEmbed.bind(this));\n\t      this._plugin.on(document, 'keydown', this.handleKey.bind(this));\n\t\n\t      this._plugin.getEditorElements().forEach(function (editor) {\n\t        _this._plugin.on(editor, 'click', _this.selectEmbed.bind(_this));\n\t      });\n\t    }\n\t  }, {\n\t    key: 'selectEmbed',\n\t    value: function selectEmbed(e) {\n\t      var el = e.target;\n\t\n\t      if (el.classList.contains(this.overlayClassName)) {\n\t        var selectedEl = _utils2.default.getClosestWithClassName(el, this.elementClassName);\n\t        if (!selectedEl.classList.contains(this.loadingClassName)) {\n\t          selectedEl.classList.add(this.activeClassName);\n\t          this._editor.selectElement(selectedEl);\n\t          this.activeEmbedElement = selectedEl;\n\t        }\n\t      }\n\t    }\n\t  }, {\n\t    key: 'unselectEmbed',\n\t    value: function unselectEmbed(e) {\n\t      var _this2 = this;\n\t\n\t      var el = e.target;\n\t      var clickedEmbed = void 0,\n\t          clickedEmbedPlaceholder = void 0,\n\t          embeds = void 0,\n\t          embedsPlaceholders = void 0;\n\t\n\t      if (el.classList.contains(this.descriptionClassName)) return false;\n\t\n\t      embeds = _utils2.default.getElementsByClassName(this._plugin.getEditorElements(), this.elementClassName);\n\t\n\t      if (!embeds || !embeds.length) {\n\t        return false;\n\t      }\n\t\n\t      // Unselect all selected images. If an image is clicked, unselect all except this one.\n\t      if (el.classList.contains(this.overlayClassName)) {\n\t        clickedEmbed = _utils2.default.getClosestWithClassName(el, this.elementClassName);\n\t      }\n\t\n\t      if (embeds) {\n\t        Array.prototype.forEach.call(embeds, function (embed) {\n\t          if (embed !== clickedEmbed) {\n\t            embed.classList.remove(_this2.activeClassName);\n\t          }\n\t        });\n\t      }\n\t    }\n\t  }, {\n\t    key: 'handleKey',\n\t    value: function handleKey(e) {\n\t      var target = e.target;\n\t      var isDescriptionElement = target && target.classList && target.classList.contains(this.descriptionClassName);\n\t\n\t      // Enter key in description\n\t      if ([MediumEditor.util.keyCode.ENTER].indexOf(e.which) > -1) {\n\t        if (isDescriptionElement) {\n\t          e.preventDefault();\n\t        }\n\t      }\n\t\n\t      // Backspace, delete\n\t      if ([MediumEditor.util.keyCode.BACKSPACE, MediumEditor.util.keyCode.DELETE].indexOf(e.which) > -1 && !isDescriptionElement) {\n\t        this.removeEmbed(e);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'handleClick',\n\t    value: function handleClick() {\n\t      this.el = this._plugin.getCore().selectedElement;\n\t      this.el.classList.add(this.loadingClassName);\n\t      this.el.classList.add(this.placeholderClassName);\n\t      this.el.setAttribute('data-placeholder', this.options.placeholder);\n\t\n\t      this.instanceHandlePaste = this.handlePaste.bind(this);\n\t      this.instanceHandleKeyDown = this.handleKeyDown.bind(this);\n\t\n\t      this._plugin.on(document, 'paste', this.instanceHandlePaste);\n\t      this._plugin.on(document, 'keydown', this.instanceHandleKeyDown);\n\t\n\t      // FIXME: it doesn't work yet.  :(\n\t      this._plugin.on(this.el, 'blur', this.handleBlur.bind(this));\n\t\n\t      // this._plugin.getCore().hideButtons();\n\t\n\t      // return focus to element, allow user to cancel embed by start writing\n\t      this._editor.elements[0].focus();\n\t      this.el.focus();\n\t\n\t      // this._editor.selectElement(this.el);\n\t      // console.log( this._editor.selection );\n\t    }\n\t  }, {\n\t    key: 'handleKeyDown',\n\t    value: function handleKeyDown(evt) {\n\t      if (evt.which !== 17 && evt.which !== 91 && evt.which !== 224 // Cmd or Ctrl pressed (user probably preparing to paste url via hot keys)\n\t      && (evt.which === 27 || this._plugin.selectedElement !== this.el)) {\n\t        // Escape\n\t        this.cancelEmbed();\n\t        return false;\n\t      }\n\t      return true;\n\t    }\n\t  }, {\n\t    key: 'handlePaste',\n\t    value: function handlePaste(evt) {\n\t      var pastedUrl = evt.clipboardData.getData('text');\n\t      var linkRegEx = new RegExp('^(http(s?):)?\\/\\/', 'i');\n\t      var linkRegEx2 = new RegExp('^(www\\.)?', 'i');\n\t\n\t      if (linkRegEx.test(pastedUrl) || linkRegEx2.test(pastedUrl)) {\n\t        var html = this.options.oembedProxy ? this.oembed(pastedUrl, true) : this.parseUrl(pastedUrl, true);\n\t      }\n\t\n\t      this.cancelEmbed();\n\t    }\n\t  }, {\n\t    key: 'removeEmbed',\n\t    value: function removeEmbed(e) {}\n\t    // TODO remove Embed (overlay with cross-icon... maybe)\n\t\n\t\n\t    /**\n\t     * Init Toolbar for tuning embed position\n\t     *\n\t     * @param {string} url\n\t     * @param {pasted} boolean\n\t     * @return {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'initToolbar',\n\t    value: function initToolbar() {\n\t      this.toolbar = new _Toolbar2.default({\n\t        plugin: this._plugin,\n\t        type: 'embeds',\n\t        activeClassName: this.activeClassName,\n\t        buttons: [{\n\t          name: 'embed-align-left',\n\t          action: 'left',\n\t          label: 'Left',\n\t          onClick: function () {\n\t            this.changeAlign('align-left');\n\t          }.bind(this)\n\t        }, {\n\t          name: 'embed-align-center',\n\t          action: 'center',\n\t          label: 'Center',\n\t          onClick: function () {\n\t            this.changeAlign('align-center');\n\t          }.bind(this)\n\t        }, {\n\t          name: 'embed-align-center-wide',\n\t          action: 'center-wide',\n\t          label: 'Wide',\n\t          onClick: function () {\n\t            this.changeAlign('align-center-wide');\n\t          }.bind(this)\n\t        }, {\n\t          name: 'embed-align-center-full',\n\t          action: 'center-full',\n\t          label: 'Full',\n\t          onClick: function () {\n\t            this.changeAlign('align-center-full');\n\t          }.bind(this)\n\t        }, {\n\t          name: 'embed-align-right',\n\t          action: 'right',\n\t          label: 'Right',\n\t          onClick: function () {\n\t            this.changeAlign('align-right');\n\t          }.bind(this)\n\t        }]\n\t      });\n\t\n\t      this._editor.extensions.push(this.toolbar);\n\t    }\n\t  }, {\n\t    key: 'changeAlign',\n\t    value: function changeAlign(className) {\n\t      var el = this.activeEmbedElement;\n\t      el.classList.remove('align-left', 'align-center', 'align-right', 'align-center-full');\n\t      el.classList.add(className);\n\t    }\n\t\n\t    /**\n\t     * Get HTML via oEmbed proxy\n\t     *\n\t     * @param {string} url\n\t     * @param {pasted} boolean\n\t     * @return {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'oembed',\n\t    value: function oembed(url, pasted) {\n\t      var _this3 = this;\n\t\n\t      var urlOut = this.options.oembedProxy + '&url=' + url;\n\t      var xhr = new XMLHttpRequest();\n\t\n\t      // console.log(urlOut);\n\t      xhr.open(\"GET\", urlOut, true);\n\t      xhr.onreadystatechange = function () {\n\t        if (xhr.readyState === 4 && xhr.status === 200) {\n\t          var data = JSON.parse(xhr.responseText);\n\t          _this3.embed(data.html, url, data);\n\t        }\n\t      };\n\t\n\t      xhr.send();\n\t\n\t      return true;\n\t    }\n\t\n\t    /**\n\t     * Get HTML using regexp\n\t     *\n\t     * @param {string} url\n\t     * @param {bool} pasted\n\t     * @return {void}\n\t     */\n\t\n\t  }, {\n\t    key: 'parseUrl',\n\t    value: function parseUrl(url, pasted) {\n\t      var html = void 0;\n\t\n\t      if (!new RegExp(['youtube', 'youtu.be', 'vimeo', 'instagram', 'twitter', 'facebook'].join('|')).test(url)) {\n\t        // $.proxy(this, 'convertBadEmbed', url)();\n\t        return false;\n\t      }\n\t\n\t      html = url.replace(/\\n?/g, '').replace(/^((http(s)?:\\/\\/)?(www\\.)?(youtube\\.com|youtu\\.be)\\/(watch\\?v=|v\\/)?)([a-zA-Z0-9\\-_]+)(.*)?$/, '<div class=\"video video-youtube\"><iframe width=\"420\" height=\"315\" src=\"//www.youtube.com/embed/$7\" frameborder=\"0\" allowfullscreen></iframe></div>').replace(/^https?:\\/\\/vimeo\\.com(\\/.+)?\\/([0-9]+)$/, '<div class=\"video video-vimeo\"><iframe src=\"//player.vimeo.com/video/$2\" width=\"500\" height=\"281\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe></div>').replace(/^https:\\/\\/twitter\\.com\\/(\\w+)\\/status\\/(\\d+)\\/?$/, '<blockquote class=\"twitter-tweet\" align=\"center\" lang=\"en\"><a href=\"https://twitter.com/$1/statuses/$2\"></a></blockquote><script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>').replace(/^(https:\\/\\/www\\.facebook\\.com\\/(.*))$/, '<script src=\"//connect.facebook.net/en_US/sdk.js#xfbml=1&amp;version=v2.2\" async></script><div class=\"fb-post\" data-href=\"$1\"><div class=\"fb-xfbml-parse-ignore\"><a href=\"$1\">Loading Facebook post...</a></div></div>').replace(/^https?:\\/\\/instagram\\.com\\/p\\/(.+)\\/?$/, '<span class=\"instagram\"><iframe src=\"//instagram.com/p/$1/embed/\" width=\"612\" height=\"710\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe></span>');\n\t\n\t      if (/<(\"[^\"]*\"|'[^']*'|[^'\">])*>/.test(html) === false) {\n\t        // $.proxy(this, 'convertBadEmbed', url)();\n\t        return false;\n\t      }\n\t\n\t      if (pasted) {\n\t        return this.embed(html, url);\n\t      } else {\n\t        return this.embed(html);\n\t      }\n\t    }\n\t  }, {\n\t    key: 'embed',\n\t\n\t\n\t    /**\n\t     * Add html to page\n\t     *\n\t     * @param {string} html\n\t     * @param {string} pastedUrl\n\t     * @return {void}\n\t     */\n\t\n\t    value: function embed(html, pastedUrl, info) {\n\t      var el = void 0,\n\t          figure = void 0,\n\t          descriptionContainer = void 0,\n\t          description = void 0,\n\t          metacontainer = void 0,\n\t          container = void 0,\n\t          overlay = void 0,\n\t          lastEl = void 0;\n\t\n\t      if (!html) {\n\t        console.error('Incorrect URL format specified: ', pastedUrl);\n\t        return false;\n\t      }\n\t\n\t      if (info && info.type === 'link') {\n\t        console.error('Just common link — no any embeds to insert: ', pastedUrl);\n\t        return false;\n\t      }\n\t\n\t      el = this._plugin.getCore().selectedElement;\n\t      figure = document.createElement('figure');\n\t      figure.classList.add('medium-editor-insert-embeds-item');\n\t\n\t      descriptionContainer = document.createElement('div');\n\t      descriptionContainer.classList.add(this.descriptionContainerClassName);\n\t\n\t      description = document.createElement('figcaption');\n\t      description.classList.add(this.descriptionClassName);\n\t      description.setAttribute('contenteditable', true);\n\t      description.setAttribute('data-placeholder', 'Type caption for embed (optional)');\n\t\n\t      metacontainer = document.createElement('div');\n\t      metacontainer.classList.add(this.elementClassName);\n\t      // metacontainer.classList.add(this.activeClassName);\n\t\n\t      metacontainer.setAttribute('contenteditable', false);\n\t\n\t      container = document.createElement('div');\n\t      container.classList.add('medium-editor-insert-embeds-item-container');\n\t\n\t      overlay = document.createElement('div');\n\t      overlay.classList.add(this.overlayClassName);\n\t\n\t      metacontainer.appendChild(figure);\n\t      figure.appendChild(container);\n\t      figure.appendChild(overlay);\n\t\n\t      descriptionContainer.classList.add(this.descriptionContainerClassName);\n\t      description.contentEditable = true;\n\t      description.classList.add(this.descriptionClassName);\n\t      description.dataset.placeholder = this.descriptionPlaceholder;\n\t\n\t      el.replaceWith(metacontainer);\n\t\n\t      // check if embed is last element, then add one more p after it\n\t      lastEl = metacontainer.parentNode.lastChild;\n\t\n\t      while (lastEl && lastEl.nodeType !== 1) {\n\t        lastEl = lastEl.previousSibling;\n\t      }\n\t\n\t      if (lastEl === metacontainer) {\n\t        var lastP = document.createElement('p');\n\t        lastP.appendChild(document.createElement('br'));\n\t        metacontainer.parentNode.appendChild(lastP);\n\t      }\n\t\n\t      container.innerHTML = html;\n\t\n\t      this._editor.selectElement(metacontainer);\n\t\n\t      // console.log(html);\n\t      // this.core.triggerInput();\n\t\n\t      if (html.indexOf('facebook') !== -1) {\n\t        if (typeof FB !== 'undefined') {\n\t          setTimeout(function () {\n\t            FB.XFBML.parse();\n\t          }, 2000);\n\t        }\n\t      }\n\t\n\t      this.options.onInsert && this.options.onInsert(html);\n\t\n\t      return true;\n\t    }\n\t  }, {\n\t    key: 'handleBlur',\n\t    value: function handleBlur() {\n\t      console.log('blur');\n\t      // this.cancelEmbed();\n\t    }\n\t  }, {\n\t    key: 'hidePlaceholder',\n\t    value: function hidePlaceholder() {\n\t      this.el.removeAttribute('data-placeholder');\n\t      this.el.classList.remove('medium-editor-insert-embeds-placeholder');\n\t    }\n\t  }, {\n\t    key: 'cancelEmbed',\n\t    value: function cancelEmbed() {\n\t      this.hidePlaceholder();\n\t      this.el.classList.remove('medium-editor-insert-embeds-active');\n\t\n\t      this._plugin.off(document, 'paste', this.instanceHandlePaste);\n\t      this._plugin.off(document, 'keyup', this.instanceHandleKeyUp);\n\t    }\n\t  }, {\n\t    key: 'destroy',\n\t    value: function destroy() {\n\t      this.cancelEmbed();\n\t    }\n\t  }]);\n\t\n\t  return Embeds;\n\t}();\n\t\n\texports.default = Embeds;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tvar _utils = __webpack_require__(1);\n\t\n\tvar _utils2 = _interopRequireDefault(_utils);\n\t\n\tvar _Toolbar = __webpack_require__(2);\n\t\n\tvar _Toolbar2 = _interopRequireDefault(_Toolbar);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar Images = function () {\n\t    function Images(plugin, options) {\n\t        _classCallCheck(this, Images);\n\t\n\t        this.options = {\n\t            label: '<span class=\"fa fa-camera\"></span>',\n\t            preview: true,\n\t            uploadUrl: 'upload.php',\n\t            deleteUrl: 'delete.php',\n\t            deleteMethod: 'DELETE',\n\t            deleteData: {}\n\t        };\n\t\n\t        Object.assign(this.options, options);\n\t\n\t        this._plugin = plugin;\n\t        this._editor = this._plugin.base;\n\t        this.elementClassName = 'medium-editor-insert-images';\n\t        this.loadingClassName = 'medium-editor-insert-images-loading';\n\t        this.activeClassName = 'medium-editor-insert-image-active';\n\t        this.descriptionContainerClassName = 'medium-editor-embed-image-description-container';\n\t        this.descriptionClassName = 'medium-editor-embed-image-description';\n\t        this.label = this.options.label;\n\t        this.descriptionPlaceholder = this.options.descriptionPlaceholder;\n\t        this.activeImageElement = null;\n\t        this.initToolbar();\n\t        this.events();\n\t    }\n\t\n\t    _createClass(Images, [{\n\t        key: 'events',\n\t        value: function events() {\n\t            var _this = this;\n\t\n\t            this._plugin.on(document, 'click', this.unselectImage.bind(this));\n\t            this._plugin.on(document, 'keydown', this.handleKey.bind(this));\n\t\n\t            this._plugin.getEditorElements().forEach(function (editor) {\n\t                _this._plugin.on(editor, 'click', _this.selectImage.bind(_this));\n\t            });\n\t        }\n\t    }, {\n\t        key: 'handleClick',\n\t        value: function handleClick() {\n\t            var _this2 = this;\n\t\n\t            if (this.options.onInsertButtonClick) {\n\t                var uid = _utils2.default.generateRandomString();\n\t                this.options.onInsertButtonClick(function (imageUrl) {\n\t                    return _this2.insertImage(imageUrl, uid);\n\t                }, function (imageUrl) {\n\t                    return _this2.insertImage(imageUrl, uid, true);\n\t                });\n\t            } else {\n\t                this._input = document.createElement('input');\n\t                this._input.type = 'file';\n\t                this._input.multiple = true;\n\t                this._plugin.on(this._input, 'change', this.uploadFiles.bind(this));\n\t\n\t                this._input.click();\n\t            }\n\t        }\n\t    }, {\n\t        key: 'initToolbar',\n\t        value: function initToolbar() {\n\t            this.toolbar = new _Toolbar2.default({\n\t                plugin: this._plugin,\n\t                type: 'images',\n\t                activeClassName: this.activeClassName,\n\t                buttons: [{\n\t                    name: 'image-align-left',\n\t                    action: 'left',\n\t                    label: 'Left',\n\t                    onClick: function () {\n\t                        this.changeAlign('align-left');\n\t                    }.bind(this)\n\t                }, {\n\t                    name: 'image-align-center',\n\t                    action: 'center',\n\t                    label: 'Center',\n\t                    onClick: function () {\n\t                        this.changeAlign('align-center');\n\t                    }.bind(this)\n\t                }, {\n\t                    name: 'image-align-center-wide',\n\t                    action: 'center-wide',\n\t                    label: 'Wide',\n\t                    onClick: function () {\n\t                        this.changeAlign('align-center-wide');\n\t                    }.bind(this)\n\t                }, {\n\t                    name: 'image-align-center-full',\n\t                    action: 'center-full',\n\t                    label: 'Full',\n\t                    onClick: function () {\n\t                        this.changeAlign('align-center-full');\n\t                    }.bind(this)\n\t                }, {\n\t                    name: 'image-align-right',\n\t                    action: 'right',\n\t                    label: 'Right',\n\t                    onClick: function () {\n\t                        this.changeAlign('align-right');\n\t                    }.bind(this)\n\t                }]\n\t            });\n\t\n\t            this._editor.extensions.push(this.toolbar);\n\t        }\n\t    }, {\n\t        key: 'changeAlign',\n\t        value: function changeAlign(className) {\n\t            var el = this.activeImageElement;\n\t            el.classList.remove('align-left', 'align-center', 'align-right', 'align-center-full');\n\t            el.classList.add(className);\n\t        }\n\t    }, {\n\t        key: 'uploadFiles',\n\t        value: function uploadFiles() {\n\t            var _this3 = this;\n\t\n\t            Array.prototype.forEach.call(this._input.files, function (file) {\n\t                // Generate uid for this image, so we can identify it later\n\t                // and we can replace preview image with uploaded one\n\t                var uid = _utils2.default.generateRandomString();\n\t\n\t                if (_this3.options.preview) {\n\t                    _this3.preview(file, uid);\n\t                }\n\t\n\t                _this3.upload(file, uid);\n\t            });\n\t        }\n\t    }, {\n\t        key: 'preview',\n\t        value: function preview(file, uid) {\n\t            var _this4 = this;\n\t\n\t            var reader = new FileReader();\n\t\n\t            reader.onload = function (e) {\n\t                _this4.insertImage(e.target.result, uid);\n\t            };\n\t\n\t            reader.readAsDataURL(file);\n\t        }\n\t    }, {\n\t        key: 'upload',\n\t        value: function upload(file, uid) {\n\t            var xhr = new XMLHttpRequest(),\n\t                data = new FormData();\n\t            var insertImage = this.insertImage.bind(this);\n\t\n\t            xhr.open(\"POST\", this.options.uploadUrl, true);\n\t            xhr.onreadystatechange = function () {\n\t                if (xhr.readyState === 4 && xhr.status === 200) {\n\t                    insertImage(xhr.responseText, _utils2.default.generateRandomString());\n\t                }\n\t            };\n\t\n\t            data.append(\"file\", file);\n\t            xhr.send(data);\n\t        }\n\t    }, {\n\t        key: 'insertImage',\n\t        value: function insertImage(imageUrl, uid, isLoader) {\n\t            var paragraph = this._plugin.getCore().selectedElement;\n\t\n\t            // Replace paragraph with div, because figure is a block element\n\t            // and can't be nested inside paragraphs\n\t            if (paragraph.nodeName.toLowerCase() === 'p') {\n\t                var div = document.createElement('div');\n\t\n\t                paragraph.parentNode.insertBefore(div, paragraph);\n\t                this._plugin.getCore().selectElement(div);\n\t                paragraph.remove();\n\t            }\n\t            var image = this._plugin.getCore().selectedElement.querySelector('[data-uid=\"' + uid + '\"]');\n\t\n\t            if (image) {\n\t                this.replaceImage(image, imageUrl, isLoader);\n\t            } else {\n\t                this.addImage(imageUrl, uid, isLoader);\n\t            }\n\t\n\t            this._plugin.getCore().hideButtons();\n\t        }\n\t    }, {\n\t        key: 'addImage',\n\t        value: function addImage(url, uid, isLoader) {\n\t            var _this5 = this;\n\t\n\t            var el = this._plugin.getCore().selectedElement,\n\t                figure = document.createElement('figure'),\n\t                img = document.createElement('img'),\n\t                descriptionContainer = document.createElement('div'),\n\t                description = document.createElement('figcaption'),\n\t                paragraph = document.createElement('p');\n\t\n\t            var domImage = void 0;\n\t\n\t            img.alt = '';\n\t\n\t            if (uid) {\n\t                img.setAttribute('data-uid', uid);\n\t            }\n\t\n\t            descriptionContainer.classList.add(this.descriptionContainerClassName);\n\t            description.contentEditable = true;\n\t            description.classList.add(this.descriptionClassName);\n\t            description.dataset.placeholder = this.descriptionPlaceholder;\n\t\n\t            // If we're dealing with a preview image,\n\t            // we don't have to preload it before displaying\n\t            if (url.match(/^data:/)) {\n\t                img.src = url;\n\t                figure.appendChild(img);\n\t                el.appendChild(figure);\n\t            } else {\n\t                domImage = new Image();\n\t                domImage.onload = function () {\n\t                    img.src = domImage.src;\n\t                    if (!isLoader) {\n\t                        img.classList.add(_this5.activeClassName);\n\t                    }\n\t                    figure.appendChild(img);\n\t                    descriptionContainer.appendChild(description);\n\t                    figure.appendChild(descriptionContainer);\n\t                    el.appendChild(figure);\n\t                    paragraph.innerHTML = '<br>';\n\t\n\t                    if (!el.nextSibling || !el.nextSibling.nextSibling) {\n\t                        el.parentNode.insertBefore(paragraph, el.nextSibling);\n\t                    }\n\t                };\n\t\n\t                domImage.src = url;\n\t                if (isLoader) {\n\t                    el.classList.add(this.loadingClassName);\n\t                }\n\t            }\n\t\n\t            el.classList.add(this.elementClassName);\n\t            el.contentEditable = false;\n\t            el.classList.add('align-center');\n\t\n\t            // Return domImage so we can test this function easily\n\t            return domImage;\n\t        }\n\t    }, {\n\t        key: 'replaceImage',\n\t        value: function replaceImage(image, url, isLoader) {\n\t            var domImage = new Image();\n\t            var el = this._plugin.getCore().selectedElement;\n\t\n\t            if (!isLoader) {\n\t                el.classList.remove(this.loadingClassName);\n\t                el.querySelector('img').classList.add(this.activeClassName);\n\t            }\n\t\n\t            domImage.onload = function () {\n\t                image.src = domImage.src;\n\t                image.removeAttribute('data-uid');\n\t            };\n\t\n\t            domImage.src = url;\n\t\n\t            // Return domImage so we can test this function easily\n\t            return domImage;\n\t        }\n\t    }, {\n\t        key: 'selectImage',\n\t        value: function selectImage(e) {\n\t            var el = e.target;\n\t\n\t            if (el.nodeName.toLowerCase() === 'img' && _utils2.default.getClosestWithClassName(el, this.elementClassName)) {\n\t                var parentNode = el.parentNode.parentNode;\n\t\n\t                if (!parentNode.classList.contains(this.loadingClassName)) {\n\t                    el.classList.add(this.activeClassName);\n\t                    parentNode.classList.add(this.activeClassName);\n\t                    // TODO: The value is correct, but the medium sometimes change\n\t                    this._editor.selectElement(parentNode);\n\t                    this.activeImageElement = parentNode;\n\t                }\n\t            }\n\t        }\n\t    }, {\n\t        key: 'unselectImage',\n\t        value: function unselectImage(e) {\n\t            var _this6 = this;\n\t\n\t            var el = e.target;\n\t            var clickedImage = void 0,\n\t                images = void 0;\n\t\n\t            if (el.classList.contains(this.descriptionClassName)) return false;\n\t\n\t            // Unselect all selected images. If an image is clicked, unselect all except this one.\n\t            if (el.nodeName.toLowerCase() === 'img' && el.classList.contains(this.activeClassName)) {\n\t                clickedImage = el;\n\t            }\n\t\n\t            images = _utils2.default.getElementsByClassName(this._plugin.getEditorElements(), this.activeClassName);\n\t            Array.prototype.forEach.call(images, function (image) {\n\t                if (image !== clickedImage) {\n\t                    image.classList.remove(_this6.activeClassName);\n\t                }\n\t            });\n\t        }\n\t    }, {\n\t        key: 'handleKey',\n\t        value: function handleKey(e) {\n\t            var target = e.target;\n\t            var isDescriptionElement = target && target.classList && target.classList.contains(this.descriptionClassName);\n\t\n\t            // Enter key in description\n\t            if ([MediumEditor.util.keyCode.ENTER].indexOf(e.which) > -1) {\n\t                if (isDescriptionElement) {\n\t                    e.preventDefault();\n\t                }\n\t            }\n\t\n\t            // Backspace, delete\n\t            if ([MediumEditor.util.keyCode.BACKSPACE, MediumEditor.util.keyCode.DELETE].indexOf(e.which) > -1 && !isDescriptionElement) {\n\t                this.removeImage(e);\n\t            }\n\t        }\n\t    }, {\n\t        key: 'removeImage',\n\t        value: function removeImage(e) {\n\t            var _this7 = this;\n\t\n\t            var images = _utils2.default.getElementsByClassName(this._plugin.getEditorElements(), this.activeClassName),\n\t                selection = window.getSelection();\n\t            var selectedHtml = void 0;\n\t\n\t            // Remove image even if it's not selected, but backspace/del is pressed in text\n\t            if (selection && selection.rangeCount) {\n\t                var range = MediumEditor.selection.getSelectionRange(document),\n\t                    focusedElement = MediumEditor.selection.getSelectedParentElement(range),\n\t                    caretPosition = MediumEditor.selection.getCaretOffsets(focusedElement).left;\n\t                var sibling = void 0;\n\t\n\t                // Is backspace pressed and caret is at the beginning of a paragraph, get previous element\n\t                if (e.which === MediumEditor.util.keyCode.BACKSPACE && caretPosition === 0) {\n\t                    sibling = focusedElement.previousElementSibling;\n\t                    // Is del pressed and caret is at the end of a paragraph, get next element\n\t                } else if (e.which === MediumEditor.util.keyCode.DELETE && caretPosition === focusedElement.innerText.length) {\n\t                    sibling = focusedElement.nextElementSibling;\n\t                }\n\t\n\t                if (sibling && sibling.classList.contains('medium-editor-insert-images')) {\n\t                    var newImages = sibling.getElementsByTagName('img');\n\t                    Array.prototype.forEach.call(newImages, function (image) {\n\t                        images.push(image);\n\t                    });\n\t                }\n\t\n\t                // If text is selected, find images in the selection\n\t                selectedHtml = MediumEditor.selection.getSelectionHtml(document);\n\t                if (selectedHtml) {\n\t                    var temp = document.createElement('div');\n\t                    var wrappers = void 0,\n\t                        _newImages = void 0;\n\t                    temp.innerHTML = selectedHtml;\n\t\n\t                    wrappers = temp.getElementsByClassName('medium-editor-insert-images');\n\t                    _newImages = _utils2.default.getElementsByTagName(wrappers, 'img');\n\t\n\t                    Array.prototype.forEach.call(_newImages, function (image) {\n\t                        images.push(image);\n\t                    });\n\t                }\n\t            }\n\t\n\t            if (images.length) {\n\t                if (!selectedHtml) {\n\t                    e.preventDefault();\n\t                }\n\t\n\t                images.forEach(function (image) {\n\t                    var wrapper = _utils2.default.getClosestWithClassName(image, 'medium-editor-insert-images');\n\t                    _this7.deleteFile(image.src);\n\t\n\t                    image.parentNode.remove();\n\t\n\t                    // If wrapper has no images anymore, remove it\n\t                    if (wrapper.childElementCount === 0) {\n\t                        var next = wrapper.nextElementSibling,\n\t                            prev = wrapper.previousElementSibling;\n\t\n\t                        wrapper.remove();\n\t\n\t                        // If there is no selection, move cursor at the beginning of next paragraph (if delete is pressed),\n\t                        // or nove it at the end of previous paragraph (if backspace is pressed)\n\t                        if (!selectedHtml) {\n\t                            if (next || prev) {\n\t                                if (next && e.which === MediumEditor.util.keyCode.DELETE || !prev) {\n\t                                    MediumEditor.selection.moveCursor(document, next, 0);\n\t                                } else {\n\t                                    MediumEditor.selection.moveCursor(document, prev.lastChild, prev.lastChild.textContent.length);\n\t                                }\n\t                            }\n\t                        }\n\t                    }\n\t                });\n\t            }\n\t        }\n\t    }, {\n\t        key: 'deleteFile',\n\t        value: function deleteFile(image) {\n\t            if (this.options.deleteUrl) {\n\t                var xhr = new XMLHttpRequest(),\n\t                    data = Object.assign({}, {\n\t                    file: image\n\t                }, this.options.deleteData);\n\t\n\t                xhr.open(this.options.deleteMethod, this.options.deleteUrl, true);\n\t                xhr.send(data);\n\t            }\n\t        }\n\t    }, {\n\t        key: 'destroy',\n\t        value: function destroy() {}\n\t    }]);\n\t\n\t    return Images;\n\t}();\n\t\n\texports.default = Images;\n\tmodule.exports = exports['default'];\n\n/***/ })\n/******/ ])\n});\n;\n\n\n// WEBPACK FOOTER //\n// medium-editor-insert.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap bc924b3e6778d27193ac","import Core from './Core';\n\nconst MediumEditorInsert = MediumEditor.Extension.extend({\n    name: 'insert',\n\n    addons: {\n        images: true,\n        embeds: true\n    },\n\n    _initializedAddons: {},\n\n    init: function() {\n        MediumEditor.Extension.prototype.init.apply(this, arguments);\n\n        this.core = new Core(this);\n    },\n\n    destroy: function() {\n        this.core.removeButtons();\n    },\n\n    getCore: function() {\n        return this.core;\n    },\n\n    getAddons: function () {\n        return this._initializedAddons;\n    },\n\n    getAddon: function(name) {\n        return this._initializedAddons[name];\n    }\n});\n\nexport default MediumEditorInsert;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/Plugin.js","const utils = {\n    ucfirst: (str) => {\n        return str.charAt(0).toUpperCase() + str.slice(1);\n    },\n\n    generateRandomString: (length = 15) => {\n        return Math.random().toString(36).substr(2, length);\n    },\n\n    getClosestWithClassName: (el, className) => {\n        return MediumEditor.util.traverseUp(el, (element) => {\n            return element.classList.contains(className);\n        });\n    },\n\n    isChildOf: (el, parent) => {\n        return MediumEditor.util.traverseUp(el, (element) => {\n            return element === parent;\n        }) ? true : false;\n    },\n\n    getElementsByClassName: (parents, className) => {\n        const results = [];\n\n        Array.prototype.forEach.call(parents, (editor) => {\n            const elements = editor.getElementsByClassName(className);\n\n            Array.prototype.forEach.call(elements, (element) => {\n                results.push(element);\n            });\n        });\n\n        return results;\n    },\n\n    getElementsByTagName: (parents, tagName) => {\n        const results = [];\n\n        Array.prototype.forEach.call(parents, (editor) => {\n            const elements = editor.getElementsByTagName(tagName);\n\n            Array.prototype.forEach.call(elements, (element) => {\n                results.push(element);\n            });\n        });\n\n        return results;\n    }\n};\n\nexport default utils;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/utils.js","import utils from './utils';\nimport ToolbarButton from './ToolbarButton';\n\nconst MediumEditorToolbar = MediumEditor.extensions.toolbar;\n\nexport default class Toolbar extends MediumEditorToolbar {\n\n    constructor(options) {\n        super(options);\n\n        this.name = `${options.type}Toolbar`;\n\n        options.buttons.forEach((buttonOptions) => {\n            const button = new ToolbarButton(Object.assign({}, {\n                window: this.plugin.window,\n                document: this.plugin.document,\n                base: this.plugin.base\n            }, buttonOptions));\n\n            button.init();\n            this.plugin.base.extensions.push(button);\n        });\n\n        this.window = options.plugin.window;\n        this.document = options.plugin.document;\n        this.base = options.plugin.base;\n\n        this.init();\n    }\n\n    createToolbar() {\n        const toolbar = this.document.createElement('div');\n\n        toolbar.id = `medium-editor-insert-${this.type}-toolbar-${this.getEditorId()}`;\n        toolbar.className = 'medium-editor-toolbar';\n\n        if (this.static) {\n            toolbar.className += ' static-toolbar';\n        } else if (this.relativeContainer) {\n            toolbar.className += ' medium-editor-relative-toolbar';\n        } else {\n            toolbar.className += ' medium-editor-stalker-toolbar';\n        }\n\n        toolbar.appendChild(this.createToolbarButtons());\n\n        // Add any forms that extensions may have\n        this.forEachExtension((extension) => {\n            if (extension.hasForm) {\n                toolbar.appendChild(extension.getForm());\n            }\n        });\n\n        this.attachEventHandlers();\n\n        return toolbar;\n    }\n\n    createToolbarButtons() {\n        const ul = this.document.createElement('ul');\n        let li,\n            btn,\n            buttons,\n            extension,\n            buttonName,\n            buttonOpts;\n\n        ul.id = `medium-editor-insert-${this.type}-toolbar-actions${this.getEditorId()}`;\n        ul.className = 'medium-editor-toolbar-actions';\n        ul.style.display = 'block';\n\n        this.buttons.forEach((button) => {\n            if (typeof button === 'string') {\n                buttonName = button;\n                buttonOpts = null;\n            } else {\n                buttonName = button.name;\n                buttonOpts = button;\n            }\n\n            // If the button already exists as an extension, it'll be returned\n            // othwerise it'll create the default built-in button\n            extension = this.base.addBuiltInExtension(buttonName, buttonOpts);\n\n            if (extension && typeof extension.getButton === 'function') {\n                btn = extension.getButton(this.base);\n                li = this.document.createElement('li');\n                if (MediumEditor.util.isElement(btn)) {\n                    li.appendChild(btn);\n                } else {\n                    li.innerHTML = btn;\n                }\n                ul.appendChild(li);\n            }\n        }, this);\n\n        buttons = ul.querySelectorAll('button');\n        if (buttons.length > 0) {\n            buttons[0].classList.add(this.firstButtonClass);\n            buttons[buttons.length - 1].classList.add(this.lastButtonClass);\n        }\n\n        return ul;\n    }\n\n    checkState() {\n        let activeElements;\n\n        if (this.base.preventSelectionUpdates) {\n            return;\n        }\n\n        // Wait for elements to be selected\n        setTimeout(() => {\n            activeElements = utils.getElementsByClassName(this.getEditorElements(), this.activeClassName);\n\n            // Hide toolbar when no elements are selected\n            if (activeElements.length === 0) {\n                return this.hideToolbar();\n            }\n\n            // Now we know there's a focused editable with a selection\n            this.showAndUpdateToolbar();\n        }, 10);\n    }\n\n    setToolbarPosition() {\n        const container = utils.getElementsByClassName(this.getEditorElements(), this.activeClassName)[0];\n        let anchorPreview;\n\n        // If there isn't a valid selection, bail\n        if (!container) {\n            return this;\n        }\n\n        this.showToolbar();\n        this.positionStaticToolbar(container);\n\n        anchorPreview = this.base.getExtensionByName('anchor-preview');\n\n        if (anchorPreview && typeof anchorPreview.hidePreview === 'function') {\n            anchorPreview.hidePreview();\n        }\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/Toolbar.js","import utils from './utils';\nimport Images from './addons/Images';\nimport Embeds from './addons/Embeds';\n\nexport default class Core {\n\n    constructor(plugin) {\n        this._plugin = plugin;\n        this._editor = this._plugin.base;\n\n        this.initAddons();\n        this.addButtons();\n        this.events();\n    }\n\n    events() {\n        let addonActions;\n\n        // This could be chained when medium-editor 5.15.2 is released\n        // https://github.com/yabwe/medium-editor/pull/1046\n        this._plugin.on(document, 'click', this.toggleButtons.bind(this));\n        this._plugin.on(document, 'keyup', this.toggleButtons.bind(this));\n        this._plugin.on(this.buttons.getElementsByClassName('medium-editor-insert-buttons-show')[0], 'click', this.toggleAddons.bind(this));\n\n        // This could be written in one statement when medium-editor 5.15.2 is released\n        // https://github.com/yabwe/medium-editor/pull/1046\n        addonActions = this.buttons.getElementsByClassName('medium-editor-insert-action');\n        Array.prototype.forEach.call(addonActions, (action) => {\n            this._plugin.on(action, 'click', this.handleAddonClick.bind(this));\n        });\n\n        this._plugin.on(window, 'resize', this.positionButtons.bind(this));\n    }\n\n    initAddons() {\n        // Initialize all default addons, we'll delete ones we don't need later\n        this._plugin._initializedAddons = {\n            images: new Images(this._plugin, this._plugin.addons.images),\n            embeds: new Embeds(this._plugin, this._plugin.addons.embeds)\n        };\n\n        Object.keys(this._plugin.addons).forEach((name) => {\n            const addonOptions = this._plugin.addons[name];\n\n            // If the addon is custom one\n            if (!this._plugin._initializedAddons[name]) {\n                if (typeof addonOptions === 'function') {\n                    this._plugin._initializedAddons[name] = new addonOptions(this._plugin);\n                } else {\n                    window.console.error(`I don't know how to initialize custom \"${name}\" addon!`);\n                }\n            }\n\n            // Delete disabled addon\n            if (!addonOptions) {\n                delete this._plugin._initializedAddons[name];\n            }\n        });\n    }\n\n    addButtons() {\n        const addons = this._plugin.getAddons();\n        let html;\n\n        this.buttons = document.createElement('div');\n        this.buttons.id = `medium-editor-insert-${this._plugin.getEditorId()}`;\n        this.buttons.classList.add('medium-editor-insert-buttons');\n        this.buttons.setAttribute('contentediable', false);\n\n        html = `<a class=\"medium-editor-insert-buttons-show\">+</a>\n            <ul class=\"medium-editor-insert-buttons-addons\">`;\n\n        Object.keys(addons).forEach((name) => {\n            const addon = addons[name];\n\n            html += `<li><a class=\"medium-editor-insert-action\" data-addon=\"${name}\">${addon.label}</a></li>`;\n        });\n\n        html += `</ul>`;\n\n        this.buttons.innerHTML = html;\n\n        document.body.appendChild(this.buttons);\n    }\n\n    removeButtons() {\n        this.buttons.remove();\n    }\n\n    positionButtons() {\n        let el, elPosition, addons, addonButton, addonsStyle, addonButtonStyle, position;\n\n        // Don't position buttons if they aren't active\n        if (this.buttons.classList.contains('medium-editor-insert-buttons-active') === false) {\n            return;\n        }\n\n        el = this._editor.getSelectedParentElement();\n        elPosition = el.getBoundingClientRect();\n        addons = this.buttons.getElementsByClassName('medium-editor-insert-buttons-addons')[0];\n        addonButton = this.buttons.getElementsByClassName('medium-editor-insert-action')[0];\n        addonsStyle = window.getComputedStyle(addons);\n        addonButtonStyle = window.getComputedStyle(addonButton);\n\n        // Calculate position\n        position = {\n            top: window.scrollY + elPosition.top,\n            left: window.scrollX + elPosition.left - parseInt(addonsStyle.left, 10) - parseInt(addonButtonStyle.marginLeft, 10)\n        };\n\n        // If left position is lower than 0, the buttons would be out of the viewport.\n        // In that case, align buttons with the editor\n        position.left = position.left < 0 ? elPosition.left : position.left;\n\n        this.buttons.style.left = `${position.left}px`;\n        this.buttons.style.top = `${position.top}px`;\n    }\n\n    toggleButtons() {\n        const el = this._editor.getSelectedParentElement();\n\n        if (this.shouldDisplayButtonsOnElement(el)) {\n            this.selectElement(el);\n            this.showButtons();\n        } else {\n            this.hideButtons();\n        }\n    }\n\n    shouldDisplayButtonsOnElement(el) {\n        const addons = this._plugin.getAddons(),\n            addonClassNames = [];\n        let isAddon = false,\n            belongsToEditor = false;\n\n        // Don't show buttons when the element has text\n        if (el.innerText.trim() !== '') {\n            return false;\n        }\n\n        // Don't show buttons when the editor doesn't belong to editor\n        this._plugin.getEditorElements().forEach((editor) => {\n            if (utils.isChildOf(el, editor)) {\n                belongsToEditor = true;\n                return;\n            }\n        });\n\n        if (!belongsToEditor) {\n            return false;\n        }\n\n        // Get class names used by addons\n        Object.keys(addons).forEach((addonName) => {\n            const addon = addons[addonName];\n            if (addon.elementClassName) {\n                addonClassNames.push(addon.elementClassName);\n            }\n        });\n\n        // Don't show buttons if the element is an addon element\n        // - when the element has an addon class, or some of its parents have it\n        addonClassNames.forEach((className) => {\n            if (el.classList.contains(className) || utils.getClosestWithClassName(el, className)) {\n                isAddon = true;\n                return;\n            }\n        });\n\n        return !isAddon;\n    }\n\n    selectElement(el) {\n        this.selectedElement = el;\n    }\n\n    showButtons() {\n        this.buttons.classList.add('medium-editor-insert-buttons-active');\n        this.positionButtons();\n    }\n\n    hideButtons() {\n        this.buttons.classList.remove('medium-editor-insert-buttons-active');\n        this.buttons.classList.remove('medium-editor-insert-addons-active');\n    }\n\n    toggleAddons() {\n        this.buttons.classList.toggle('medium-editor-insert-addons-active');\n    }\n\n    handleAddonClick(e) {\n        const name = e.currentTarget.getAttribute('data-addon');\n        e.preventDefault();\n\n        this._plugin.getAddon(name).handleClick(e);\n        this.hideButtons();\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/Core.js","const ToolbarButton = MediumEditor.extensions.button.extend({\n    init: function() {\n        this.button = this.document.createElement('button');\n        this.button.classList.add('medium-editor-action');\n        this.button.innerHTML = `<b>${this.label}</b>`;\n\n        this.on(this.button, 'click', this.handleClick.bind(this));\n    },\n\n    getButton: function() {\n      return this.button;\n    },\n\n    handleClick: function() {\n        this.onClick();\n    }\n});\n\nexport default ToolbarButton;\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/ToolbarButton.js","import utils from '../utils';\nimport Toolbar from '../Toolbar';\n\nexport default class Embeds {\n\n\tconstructor(plugin, options) {\n\t\tthis.options = {\n\t\t\tlabel: '<span class=\"fa fa-youtube-play\"></span>',\n\t\t\tplaceholder: 'Paste a YouTube, Vimeo, Facebook, Twitter or Instagram link and press Enter',\n      oembedProxy: 'http://medium.iframe.ly/api/oembed?omit_script=1&iframe=1',\n      captions: true,\n      captionPlaceholder: 'Type caption (optional)',\n      storeMeta: false,\n      styles: {\n        wide: {\n          label: '<span class=\"fa fa-align-justify\"></span>'\n          // added: function ($el) {},\n          // removed: function ($el) {}\n        },\n        left: {\n          label: '<span class=\"fa fa-align-left\"></span>'\n          // added: function ($el) {},\n          // removed: function ($el) {}\n        },\n        right: {\n          label: '<span class=\"fa fa-align-right\"></span>'\n          // added: function ($el) {},\n          // removed: function ($el) {}\n        }\n      },\n      actions: {\n        remove: {\n          label: '<span class=\"fa fa-times\"></span>',\n          clicked: function () {\n            // var $event = $.Event('keydown');\n\n            // $event.which = 8;\n            // $(document).trigger($event);\n          }\n        }\n      },\n      parseOnPaste: false\n    };\n\n\t\tObject.assign(this.options, options);\n\n    this._plugin = plugin;\n    this._editor = this._plugin.base;\n\n    this.activeClassName = 'medium-editor-insert-embeds-active';\n    this.placeholderClassName = 'medium-editor-insert-embeds-placeholder';\n    this.elementClassName = 'medium-editor-insert-embeds';\n    this.loadingClassName = 'medium-editor-insert-embeds-loading';\n    this.activeClassName = 'medium-editor-insert-embed-active';\n    this.descriptionContainerClassName = 'medium-editor-embed-embed-description-container';\n    this.descriptionClassName = 'medium-editor-embed-embed-description';\n    this.overlayClassName = 'medium-editor-insert-embeds-overlay';\n\n\t\tthis.label = this.options.label;\n    this.descriptionPlaceholder = this.options.descriptionPlaceholder;\n\n    this.initToolbar();\n    this.events();\n\n\t}\n\n  events() {\n    this._plugin.on(document, 'click', this.unselectEmbed.bind(this));\n    this._plugin.on(document, 'keydown', this.handleKey.bind(this));\n\n    this._plugin.getEditorElements().forEach((editor) => {\n        this._plugin.on(editor, 'click', this.selectEmbed.bind(this));\n    });\n  }\n\n\n  selectEmbed(e) {\n      const el = e.target;\n\n      if (el.classList.contains(this.overlayClassName)) {\n        const selectedEl = utils.getClosestWithClassName(el, this.elementClassName);\n        if (!selectedEl.classList.contains(this.loadingClassName)) {\n          selectedEl.classList.add(this.activeClassName);\n          this._editor.selectElement(selectedEl);\n          this.activeEmbedElement = selectedEl;\n        }\n      }\n  }\n\n  unselectEmbed(e) {\n    const el = e.target;\n    let clickedEmbed, clickedEmbedPlaceholder, embeds, embedsPlaceholders;\n\n    if (el.classList.contains(this.descriptionClassName)) return false;\n\n    embeds = utils.getElementsByClassName(this._plugin.getEditorElements(), this.elementClassName);\n\n    if(!embeds || !embeds.length) {\n      return false;\n    }\n\n    // Unselect all selected images. If an image is clicked, unselect all except this one.\n    if (el.classList.contains(this.overlayClassName)) {\n      clickedEmbed = utils.getClosestWithClassName(el, this.elementClassName);\n    }\n\n    if (embeds) {\n      Array.prototype.forEach.call(embeds, (embed) => {\n        if (embed !== clickedEmbed) {\n          embed.classList.remove(this.activeClassName);\n        }\n      });\n    }\n  }\n\n  handleKey(e) {\n    const target = e.target;\n    const isDescriptionElement = target && target.classList && target.classList.contains(this.descriptionClassName);\n\n    // Enter key in description\n    if ([MediumEditor.util.keyCode.ENTER].indexOf(e.which) > -1) {\n      if (isDescriptionElement) {\n        e.preventDefault();\n      }\n    }\n\n    // Backspace, delete\n    if ([MediumEditor.util.keyCode.BACKSPACE, MediumEditor.util.keyCode.DELETE].indexOf(e.which) > -1 && !isDescriptionElement) {\n      this.removeEmbed(e);\n    }\n  }\n\n  handleClick() {\n    this.el = this._plugin.getCore().selectedElement;\n    this.el.classList.add( this.loadingClassName );\n    this.el.classList.add( this.placeholderClassName );\n    this.el.setAttribute('data-placeholder', this.options.placeholder);\n\n    this.instanceHandlePaste = this.handlePaste.bind(this);\n    this.instanceHandleKeyDown = this.handleKeyDown.bind(this);\n\n    this._plugin.on(document, 'paste', this.instanceHandlePaste);\n    this._plugin.on(document, 'keydown', this.instanceHandleKeyDown);\n\n    // FIXME: it doesn't work yet.  :(\n    this._plugin.on(this.el, 'blur', this.handleBlur.bind(this));\n\n\t\t// this._plugin.getCore().hideButtons();\n\n    // return focus to element, allow user to cancel embed by start writing\n    this._editor.elements[0].focus();\n    this.el.focus();\n\n    // this._editor.selectElement(this.el);\n    // console.log( this._editor.selection );\n  }\n\n\thandleKeyDown(evt) {\n\t\tif (evt.which !== 17 && evt.which !== 91 && evt.which !== 224   // Cmd or Ctrl pressed (user probably preparing to paste url via hot keys)\n      && (evt.which === 27 || this._plugin.selectedElement !== this.el)\n    ) {\n      // Escape\n      this.cancelEmbed();\n      return false;\n\t\t}\n    return true;\n\t}\n\n\thandlePaste(evt) {\n\t\tconst pastedUrl = evt.clipboardData.getData('text');\n    const linkRegEx = new RegExp('^(http(s?):)?\\/\\/','i');\n    const linkRegEx2 = new RegExp('^(www\\.)?','i');\n\n    if (linkRegEx.test(pastedUrl) || linkRegEx2.test(pastedUrl)) {\n      const html = (this.options.oembedProxy)\n        ? this.oembed(pastedUrl, true)\n        : this.parseUrl(pastedUrl, true);\n    }\n\n    this.cancelEmbed();\n\t}\n\n\n  removeEmbed(e) {\n    // TODO remove Embed (overlay with cross-icon... maybe)\n  }\n\n  /**\n   * Init Toolbar for tuning embed position\n   *\n   * @param {string} url\n   * @param {pasted} boolean\n   * @return {void}\n   */\n  initToolbar() {\n    this.toolbar = new Toolbar({\n      plugin: this._plugin,\n      type: 'embeds',\n      activeClassName: this.activeClassName,\n      buttons: [\n        {\n          name: 'embed-align-left',\n          action: 'left',\n          label: 'Left',\n          onClick: (function() {\n              this.changeAlign('align-left');\n          }).bind(this),\n        },\n        {\n          name: 'embed-align-center',\n          action: 'center',\n          label: 'Center',\n          onClick: (function() {\n              this.changeAlign('align-center');\n          }).bind(this),\n        },\n        {\n          name: 'embed-align-center-wide',\n          action: 'center-wide',\n          label: 'Wide',\n          onClick: (function() {\n              this.changeAlign('align-center-wide');\n          }).bind(this),\n        },\n        {\n          name: 'embed-align-center-full',\n          action: 'center-full',\n          label: 'Full',\n          onClick: (function() {\n              this.changeAlign('align-center-full');\n          }).bind(this),\n        },\n        {\n          name: 'embed-align-right',\n          action: 'right',\n          label: 'Right',\n          onClick: (function() {\n              this.changeAlign('align-right');\n          }).bind(this),\n        },\n      ]\n    });\n\n    this._editor.extensions.push(this.toolbar);\n  }\n\n  changeAlign(className) {\n      const el = this.activeEmbedElement;\n      el.classList.remove('align-left', 'align-center', 'align-right', 'align-center-full');\n      el.classList.add(className);\n  }\n\n  /**\n   * Get HTML via oEmbed proxy\n   *\n   * @param {string} url\n   * @param {pasted} boolean\n   * @return {void}\n   */\n\n  oembed(url, pasted) {\n\n    const urlOut = this.options.oembedProxy + '&url=' + url;\n    const xhr = new XMLHttpRequest();\n\n    // console.log(urlOut);\n    xhr.open(\"GET\", urlOut, true);\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState === 4 && xhr.status === 200) {\n        const data = JSON.parse(xhr.responseText);\n        this.embed(data.html, url, data);\n      }\n    };\n\n    xhr.send();\n\n    return true;\n  }\n\n  /**\n   * Get HTML using regexp\n   *\n   * @param {string} url\n   * @param {bool} pasted\n   * @return {void}\n   */\n\n  parseUrl(url, pasted) {\n\t\tlet html;\n\n    if (!(new RegExp(['youtube', 'youtu.be', 'vimeo', 'instagram', 'twitter', 'facebook'].join('|')).test(url))) {\n      // $.proxy(this, 'convertBadEmbed', url)();\n      return false;\n    }\n\n    html = url.replace(/\\n?/g, '')\n      .replace(/^((http(s)?:\\/\\/)?(www\\.)?(youtube\\.com|youtu\\.be)\\/(watch\\?v=|v\\/)?)([a-zA-Z0-9\\-_]+)(.*)?$/, '<div class=\"video video-youtube\"><iframe width=\"420\" height=\"315\" src=\"//www.youtube.com/embed/$7\" frameborder=\"0\" allowfullscreen></iframe></div>')\n      .replace(/^https?:\\/\\/vimeo\\.com(\\/.+)?\\/([0-9]+)$/, '<div class=\"video video-vimeo\"><iframe src=\"//player.vimeo.com/video/$2\" width=\"500\" height=\"281\" frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe></div>')\n      .replace(/^https:\\/\\/twitter\\.com\\/(\\w+)\\/status\\/(\\d+)\\/?$/, '<blockquote class=\"twitter-tweet\" align=\"center\" lang=\"en\"><a href=\"https://twitter.com/$1/statuses/$2\"></a></blockquote><script async src=\"//platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>')\n      .replace(/^(https:\\/\\/www\\.facebook\\.com\\/(.*))$/, '<script src=\"//connect.facebook.net/en_US/sdk.js#xfbml=1&amp;version=v2.2\" async></script><div class=\"fb-post\" data-href=\"$1\"><div class=\"fb-xfbml-parse-ignore\"><a href=\"$1\">Loading Facebook post...</a></div></div>')\n      .replace(/^https?:\\/\\/instagram\\.com\\/p\\/(.+)\\/?$/, '<span class=\"instagram\"><iframe src=\"//instagram.com/p/$1/embed/\" width=\"612\" height=\"710\" frameborder=\"0\" scrolling=\"no\" allowtransparency=\"true\"></iframe></span>');\n\n    if ((/<(\"[^\"]*\"|'[^']*'|[^'\">])*>/).test(html) === false) {\n      // $.proxy(this, 'convertBadEmbed', url)();\n      return false;\n    }\n\n\n    if (pasted) {\n      return this.embed(html, url);\n    } else {\n      return this.embed(html);\n    }\n  };\n\n\n  /**\n   * Add html to page\n   *\n   * @param {string} html\n   * @param {string} pastedUrl\n   * @return {void}\n   */\n\n  embed(html, pastedUrl, info) {\n    let el, figure, descriptionContainer, description, metacontainer, container, overlay, lastEl;\n\n    if (!html) {\n      console.error('Incorrect URL format specified: ', pastedUrl);\n      return false;\n    }\n\n    if (info && info.type === 'link') {\n      console.error('Just common link — no any embeds to insert: ', pastedUrl);\n      return false;\n    }\n\n    el = this._plugin.getCore().selectedElement;\n    figure = document.createElement('figure');\n    figure.classList.add('medium-editor-insert-embeds-item');\n\n    descriptionContainer = document.createElement('div');\n    descriptionContainer.classList.add(this.descriptionContainerClassName);\n\n    description = document.createElement('figcaption');\n    description.classList.add(this.descriptionClassName);\n    description.setAttribute('contenteditable', true);\n    description.setAttribute('data-placeholder', 'Type caption for embed (optional)');\n\n    metacontainer = document.createElement('div');\n    metacontainer.classList.add(this.elementClassName);\n    // metacontainer.classList.add(this.activeClassName);\n\n    metacontainer.setAttribute('contenteditable', false);\n\n    container = document.createElement('div');\n    container.classList.add('medium-editor-insert-embeds-item-container');\n\n    overlay = document.createElement('div');\n    overlay.classList.add( this.overlayClassName );\n\n    metacontainer.appendChild(figure);\n    figure.appendChild(container);\n    figure.appendChild(overlay);\n\n    descriptionContainer.classList.add(this.descriptionContainerClassName);\n    description.contentEditable = true;\n    description.classList.add(this.descriptionClassName);\n    description.dataset.placeholder = this.descriptionPlaceholder;\n\n\n\n    el.replaceWith(metacontainer);\n\n    // check if embed is last element, then add one more p after it\n    lastEl = metacontainer.parentNode.lastChild;\n\n    while(lastEl && lastEl.nodeType !== 1) {\n      lastEl = lastEl.previousSibling;\n    }\n\n    if (lastEl === metacontainer){\n      const lastP = document.createElement('p');\n      lastP.appendChild(document.createElement('br'));\n      metacontainer.parentNode.appendChild( lastP );\n    }\n\n    container.innerHTML = html;\n\n    this._editor.selectElement(metacontainer);\n\n    // console.log(html);\n    // this.core.triggerInput();\n\n    if (html.indexOf('facebook') !== -1) {\n        if (typeof (FB) !== 'undefined') {\n            setTimeout(function () {\n                FB.XFBML.parse();\n            }, 2000);\n        }\n    }\n    \n    this.options.onInsert && this.options.onInsert(html);\n\n    return true;\n\t}\n\n  handleBlur() {\n    console.log('blur');\n    // this.cancelEmbed();\n  }\n\n  hidePlaceholder() {\n    this.el.removeAttribute('data-placeholder');\n    this.el.classList.remove('medium-editor-insert-embeds-placeholder');\n  }\n\n  cancelEmbed() {\n    this.hidePlaceholder();\n    this.el.classList.remove('medium-editor-insert-embeds-active');\n\n    this._plugin.off(document, 'paste', this.instanceHandlePaste);\n    this._plugin.off(document, 'keyup', this.instanceHandleKeyUp);\n\t}\n\n  destroy() {\n    this.cancelEmbed();\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/addons/Embeds.js","import utils from '../utils';\nimport Toolbar from '../Toolbar';\n\nexport default class Images {\n\n    constructor(plugin, options) {\n        this.options = {\n            label: '<span class=\"fa fa-camera\"></span>',\n            preview: true,\n            uploadUrl: 'upload.php',\n            deleteUrl: 'delete.php',\n            deleteMethod: 'DELETE',\n            deleteData: {}\n        };\n\n        Object.assign(this.options, options);\n\n        this._plugin = plugin;\n        this._editor = this._plugin.base;\n        this.elementClassName = 'medium-editor-insert-images';\n        this.loadingClassName = 'medium-editor-insert-images-loading';\n        this.activeClassName = 'medium-editor-insert-image-active';\n        this.descriptionContainerClassName = 'medium-editor-embed-image-description-container';\n        this.descriptionClassName = 'medium-editor-embed-image-description';\n        this.label = this.options.label;\n        this.descriptionPlaceholder = this.options.descriptionPlaceholder;\n        this.activeImageElement = null;\n        this.initToolbar();\n        this.events();\n    }\n\n    events() {\n        this._plugin.on(document, 'click', this.unselectImage.bind(this));\n        this._plugin.on(document, 'keydown', this.handleKey.bind(this));\n\n        this._plugin.getEditorElements().forEach((editor) => {\n            this._plugin.on(editor, 'click', this.selectImage.bind(this));\n        });\n    }\n\n    handleClick() {\n        if (this.options.onInsertButtonClick) {\n            const uid = utils.generateRandomString();\n            this.options.onInsertButtonClick(\n                (imageUrl) => this.insertImage(imageUrl, uid),\n                (imageUrl) => this.insertImage(imageUrl, uid, true)\n            );\n        } else {\n            this._input = document.createElement('input');\n            this._input.type = 'file';\n            this._input.multiple = true;\n            this._plugin.on(this._input, 'change', this.uploadFiles.bind(this));\n\n            this._input.click();\n        }\n    }\n\n    initToolbar() {\n        this.toolbar = new Toolbar({\n            plugin: this._plugin,\n            type: 'images',\n            activeClassName: this.activeClassName,\n            buttons: [\n                {\n                    name: 'image-align-left',\n                    action: 'left',\n                    label: 'Left',\n                    onClick: (function() {\n                        this.changeAlign('align-left');\n                    }).bind(this),\n                },\n                {\n                    name: 'image-align-center',\n                    action: 'center',\n                    label: 'Center',\n                    onClick: (function() {\n                        this.changeAlign('align-center');\n                    }).bind(this),\n                },\n                {\n                    name: 'image-align-center-wide',\n                    action: 'center-wide',\n                    label: 'Wide',\n                    onClick: (function() {\n                        this.changeAlign('align-center-wide');\n                    }).bind(this),\n                },\n                {\n                    name: 'image-align-center-full',\n                    action: 'center-full',\n                    label: 'Full',\n                    onClick: (function() {\n                        this.changeAlign('align-center-full');\n                    }).bind(this),\n                },\n                {\n                    name: 'image-align-right',\n                    action: 'right',\n                    label: 'Right',\n                    onClick: (function() {\n                        this.changeAlign('align-right');\n                    }).bind(this),\n                },\n            ]\n        });\n\n        this._editor.extensions.push(this.toolbar);\n    }\n\n    changeAlign(className) {\n        const el = this.activeImageElement;\n        el.classList.remove('align-left', 'align-center', 'align-right', 'align-center-full');\n        el.classList.add(className);\n    }\n\n    uploadFiles() {\n        Array.prototype.forEach.call(this._input.files, (file) => {\n            // Generate uid for this image, so we can identify it later\n            // and we can replace preview image with uploaded one\n            const uid = utils.generateRandomString();\n\n            if (this.options.preview) {\n                this.preview(file, uid);\n            }\n\n            this.upload(file, uid);\n        });\n    }\n\n    preview(file, uid) {\n        const reader = new FileReader();\n\n        reader.onload = (e) => {\n            this.insertImage(e.target.result, uid);\n        };\n\n        reader.readAsDataURL(file);\n    }\n\n    upload(file, uid) {\n        const xhr = new XMLHttpRequest(),\n            data = new FormData();\n        const insertImage = this.insertImage.bind(this);\n\n        xhr.open(\"POST\", this.options.uploadUrl, true);\n        xhr.onreadystatechange = () => {\n            if (xhr.readyState === 4 && xhr.status === 200) {\n                insertImage(xhr.responseText, utils.generateRandomString());\n            }\n        };\n\n        data.append(\"file\", file);\n        xhr.send(data);\n    }\n\n    insertImage(imageUrl, uid, isLoader) {\n        const paragraph = this._plugin.getCore().selectedElement;\n\n          // Replace paragraph with div, because figure is a block element\n          // and can't be nested inside paragraphs\n        if (paragraph.nodeName.toLowerCase() === 'p') {\n            const div = document.createElement('div');\n\n            paragraph.parentNode.insertBefore(div, paragraph);\n            this._plugin.getCore().selectElement(div);\n            paragraph.remove();\n        }\n        const image = this._plugin.getCore().selectedElement.querySelector(`[data-uid=\"${uid}\"]`);\n\n        if (image) {\n            this.replaceImage(image, imageUrl, isLoader);\n        } else {\n            this.addImage(imageUrl, uid, isLoader);\n        }\n\n        this._plugin.getCore().hideButtons();\n    }\n\n    addImage(url, uid, isLoader) {\n        const el = this._plugin.getCore().selectedElement,\n            figure = document.createElement('figure'),\n            img = document.createElement('img'),\n            descriptionContainer = document.createElement('div'),\n            description = document.createElement('figcaption'),\n            paragraph = document.createElement('p');\n\n        let domImage;\n\n        img.alt = '';\n\n        if (uid) {\n            img.setAttribute('data-uid', uid);\n        }\n\n        descriptionContainer.classList.add(this.descriptionContainerClassName);\n        description.contentEditable = true;\n        description.classList.add(this.descriptionClassName);\n        description.dataset.placeholder = this.descriptionPlaceholder;\n\n        // If we're dealing with a preview image,\n        // we don't have to preload it before displaying\n        if (url.match(/^data:/)) {\n            img.src = url;\n            figure.appendChild(img);\n            el.appendChild(figure);\n        } else {\n            domImage = new Image();\n            domImage.onload = () => {\n                img.src = domImage.src;\n                if (!isLoader) {\n                    img.classList.add(this.activeClassName);\n                }\n                figure.appendChild(img);\n                descriptionContainer.appendChild(description);\n                figure.appendChild(descriptionContainer);\n                el.appendChild(figure);\n                paragraph.innerHTML = '<br>';\n\n                if (!el.nextSibling || !el.nextSibling.nextSibling) {\n                    el.parentNode.insertBefore(paragraph, el.nextSibling);\n                }\n            };\n\n            domImage.src = url;\n            if (isLoader) {\n                el.classList.add(this.loadingClassName);\n            }\n        }\n\n        el.classList.add(this.elementClassName);\n        el.contentEditable = false;\n        el.classList.add('align-center');\n\n\n        // Return domImage so we can test this function easily\n        return domImage;\n    }\n\n    replaceImage(image, url, isLoader) {\n        const domImage = new Image();\n        const el = this._plugin.getCore().selectedElement;\n\n        if (!isLoader) {\n            el.classList.remove(this.loadingClassName);\n            el.querySelector('img').classList.add(this.activeClassName);\n        }\n\n\n        domImage.onload = () => {\n            image.src = domImage.src;\n            image.removeAttribute('data-uid');\n        };\n\n        domImage.src = url;\n\n        // Return domImage so we can test this function easily\n        return domImage;\n    }\n\n    selectImage(e) {\n        const el = e.target;\n\n        if (el.nodeName.toLowerCase() === 'img' && utils.getClosestWithClassName(el, this.elementClassName)) {\n            const parentNode = el.parentNode.parentNode;\n\n            if (!parentNode.classList.contains(this.loadingClassName)) {\n                el.classList.add(this.activeClassName);\n                parentNode.classList.add(this.activeClassName);\n                // TODO: The value is correct, but the medium sometimes change\n                this._editor.selectElement(parentNode);\n                this.activeImageElement = parentNode;\n            }\n        }\n    }\n\n    unselectImage(e) {\n        const el = e.target;\n        let clickedImage, images;\n\n        if (el.classList.contains(this.descriptionClassName)) return false;\n\n        // Unselect all selected images. If an image is clicked, unselect all except this one.\n        if (el.nodeName.toLowerCase() === 'img' && el.classList.contains(this.activeClassName)) {\n            clickedImage = el;\n        }\n\n        images = utils.getElementsByClassName(this._plugin.getEditorElements(), this.activeClassName);\n        Array.prototype.forEach.call(images, (image) => {\n            if (image !== clickedImage) {\n                image.classList.remove(this.activeClassName);\n            }\n        });\n    }\n\n    handleKey(e) {\n        const target = e.target;\n        const isDescriptionElement = target && target.classList && target.classList.contains(this.descriptionClassName);\n\n        // Enter key in description\n        if ([MediumEditor.util.keyCode.ENTER].indexOf(e.which) > -1) {\n            if (isDescriptionElement) {\n                e.preventDefault();\n            }\n        }\n\n        // Backspace, delete\n        if ([MediumEditor.util.keyCode.BACKSPACE, MediumEditor.util.keyCode.DELETE].indexOf(e.which) > -1 && !isDescriptionElement) {\n            this.removeImage(e);\n        }\n    }\n\n    removeImage(e) {\n        const images = utils.getElementsByClassName(this._plugin.getEditorElements(), this.activeClassName),\n            selection = window.getSelection();\n        let selectedHtml;\n\n        // Remove image even if it's not selected, but backspace/del is pressed in text\n        if (selection && selection.rangeCount) {\n            const range = MediumEditor.selection.getSelectionRange(document),\n                focusedElement = MediumEditor.selection.getSelectedParentElement(range),\n                caretPosition = MediumEditor.selection.getCaretOffsets(focusedElement).left;\n            let sibling;\n\n            // Is backspace pressed and caret is at the beginning of a paragraph, get previous element\n            if (e.which === MediumEditor.util.keyCode.BACKSPACE && caretPosition === 0) {\n                sibling = focusedElement.previousElementSibling;\n            // Is del pressed and caret is at the end of a paragraph, get next element\n            } else if (e.which === MediumEditor.util.keyCode.DELETE && caretPosition === focusedElement.innerText.length) {\n                sibling = focusedElement.nextElementSibling;\n            }\n\n            if (sibling && sibling.classList.contains('medium-editor-insert-images')) {\n                const newImages = sibling.getElementsByTagName('img');\n                Array.prototype.forEach.call(newImages, (image) => {\n                    images.push(image);\n                });\n            }\n\n            // If text is selected, find images in the selection\n            selectedHtml = MediumEditor.selection.getSelectionHtml(document);\n            if (selectedHtml) {\n                const temp = document.createElement('div');\n                let wrappers, newImages;\n                temp.innerHTML = selectedHtml;\n\n                wrappers = temp.getElementsByClassName('medium-editor-insert-images');\n                newImages = utils.getElementsByTagName(wrappers, 'img');\n\n                Array.prototype.forEach.call(newImages, (image) => {\n                    images.push(image);\n                });\n            }\n        }\n\n        if (images.length) {\n            if (!selectedHtml) {\n                e.preventDefault();\n            }\n\n            images.forEach((image) => {\n                const wrapper = utils.getClosestWithClassName(image, 'medium-editor-insert-images');\n                this.deleteFile(image.src);\n\n                image.parentNode.remove();\n\n                // If wrapper has no images anymore, remove it\n                if (wrapper.childElementCount === 0) {\n                    const next = wrapper.nextElementSibling,\n                        prev = wrapper.previousElementSibling;\n\n                    wrapper.remove();\n\n                    // If there is no selection, move cursor at the beginning of next paragraph (if delete is pressed),\n                    // or nove it at the end of previous paragraph (if backspace is pressed)\n                    if (!selectedHtml) {\n                        if (next || prev) {\n                            if ((next && e.which === MediumEditor.util.keyCode.DELETE) || !prev) {\n                                MediumEditor.selection.moveCursor(document, next, 0);\n                            } else {\n                                MediumEditor.selection.moveCursor(document, prev.lastChild, prev.lastChild.textContent.length);\n                            }\n                        }\n                    }\n                }\n            });\n        }\n    }\n\n    deleteFile(image) {\n        if (this.options.deleteUrl) {\n            const xhr = new XMLHttpRequest(),\n                data = Object.assign({}, {\n                    file: image\n                }, this.options.deleteData);\n\n            xhr.open(this.options.deleteMethod, this.options.deleteUrl, true);\n            xhr.send(data);\n        }\n    }\n\n    destroy() {\n\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/addons/Images.js"],"sourceRoot":""}